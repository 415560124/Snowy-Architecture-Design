/*
 Navicat Premium Dump SQL

 Source Server         : localhost_53306
 Source Server Type    : MySQL
 Source Server Version : 80043 (8.0.43)
 Source Host           : localhost:53306
 Source Schema         : snowy-nacos-app

 Target Server Type    : MySQL
 Target Server Version : 80043 (8.0.43)
 File Encoding         : 65001

 Date: 30/09/2025 16:36:00
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL,
  `encrypted_data_key` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT '秘钥',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id` ASC, `group_id` ASC, `tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 46 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = 'config_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO `config_info` VALUES (1, 'snowy-actuator-app-dev.yaml', 'dev', '# 服务配置\r\nserver:\r\n  port: 9001\r\n\r\n# spring相关配置\r\nspring:\r\n  boot:\r\n    admin:\r\n      client:\r\n        url: http://localhost:9001\r\n        instance:\r\n          # 默认使用的是主机名注册，改为使用ip注册\r\n          prefer-ip: true\r\n  cloud:\r\n    # nacos配置\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${spring.cloud.nacos.config.server-addr}\r\n        namespace: ${spring.cloud.nacos.config.namespace}\r\n        group: ${spring.cloud.nacos.config.group}\r\n        username: ${spring.cloud.nacos.config.username}\r\n        password: ${spring.cloud.nacos.config.password}\r\n\r\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n    health:\r\n      show-details: \"ALWAYS\"', '62b64acc7e8916c19b2432b6ef0ad089', '2024-04-24 14:33:07', '2024-04-24 14:33:07', 'nacos', '192.168.0.105', '', 'snowy-cloud-dev', NULL, NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (2, 'snowy-sentinel-app-dev.yaml', 'dev', '# 服务配置\r\nserver:\r\n  port: 9002\r\n  servlet:\r\n    #spring settings\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n      enabled: true\r\n    #cookie name setting\r\n    session:\r\n      cookie:\r\n        name:\r\n          sentinel_dashboard_cookie: sentinel_dashboard_cookie\r\n\r\n# spring相关配置\r\nspring:\r\n  mvc:\r\n    pathmatch:\r\n      matching-strategy: ant_path_matcher\r\n  boot:\r\n    admin:\r\n      client:\r\n        url: http://localhost:9001\r\n        instance:\r\n          # 默认使用的是主机名注册，改为使用ip注册\r\n          prefer-ip: true\r\n  cloud:\r\n    # nacos配置\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${spring.cloud.nacos.config.server-addr}\r\n        namespace: ${spring.cloud.nacos.config.namespace}\r\n        group: ${spring.cloud.nacos.config.group}\r\n        username: ${spring.cloud.nacos.config.username}\r\n        password: ${spring.cloud.nacos.config.password}\r\n\r\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n    health:\r\n      show-details: \"ALWAYS\"\r\n\r\n# logging settings\r\nlogging:\r\n  level:\r\n    org:\r\n      springframework:\r\n        web: INFO\r\n  file:\r\n    name: ${user.home}/logs/csp/sentinel-dashboard.log\r\n  pattern:\r\n    file: \'%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n\'\r\n    console: \'%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n\'\r\n\r\n# auth settings\r\nauth:\r\n  filter:\r\n    exclude-urls: /,/auth/login,/auth/logout,/registry/machine,/version,/actuator/**,/details\r\n    exclude-url-suffixes: htm,html,js,css,map,ico,ttf,woff,png\r\n  # If auth.enabled=false, Sentinel console disable login\r\n  username: sentinel\r\n  password: sentinel\r\n\r\n# Inject the dashboard version. It\'s required to enable\r\n# filtering in pom.xml for this resource file.\r\nsentinel:\r\n  dashboard:\r\n    version: 1.8.7', 'b87739eb375a52be36b6b6f125d231c2', '2024-04-24 14:33:29', '2024-04-24 14:33:29', 'nacos', '192.168.0.105', '', 'snowy-cloud-dev', NULL, NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (3, 'snowy-gateway-app-dev.yaml', 'dev', '# 服务配置\nserver:\n  port: 9003\n\n# spring相关配置\nspring:\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:53306/snowy-cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&useInformationSchema=true&rewriteBatchedStatements=true\n    username: root\n    password: Abc131419..\n\n# Oracle数据库\n#spring:\n#  datasource:\n#    driver-class-name: oracle.jdbc.OracleDriver\n#    url: jdbc:oracle:thin:@localhost:1521:xe\n#    username: SNOWY-CLOUD-ORACLE\n#    password: 123456\n\n# SQLServer配置\n#spring:\n#  datasource:\n#    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver\n#    url: jdbc:sqlserver://localhost:1433;DatabaseName=snowy-cloud-mssql\n#    username: sa\n#    password: 123456\n\n# PostgreSQL配置\n#spring:\n#  datasource:\n#    driverClassName: org.postgresql.Driver\n#    url: jdbc:postgresql://127.0.0.1:5432/snowy-cloud-postgresql\n#    username: postgres\n#    password: 123456\n\n# 达梦数据库配置\n#spring:\n#  datasource:\n#    driver-class-name: dm.jdbc.driver.DmDriver\n#    url: jdbc:dm://localhost:5236/SYSDBA\n#    username: SYSDBA\n#    password: 123456789\n\n# 人大金仓数据库\n#spring:\n#  datasource:\n#    driver-class-name: com.kingbase8.Driver\n#    url: jdbc:kingbase8://localhost:54321/snowy-cloud-kingbase\n#    username: system\n#    password: 123456\n# #人大金仓数据库兼容问题，不需要加在sql语句中加public的解决方法：\n# #在根目录data下的kingbase.conf文档里面找到search_path = \'\"$user\",PUBLIC,sys_catalog\'进行替换放开\n# #重启数据库即可完全兼容，注意 sql中不能出现mysql中的关键字的单引号\n\n  # redis相关配置\n  data:\n    redis:\n      database: 1\n      host: 127.0.0.1\n      port: 56379\n      password: Abc131419..\n      timeout: 10s\n      lettuce:\n        pool:\n          max-active: 200\n          max-wait: -1ms\n          max-idle: 10\n          min-idle: 0\n\n  boot:\n    admin:\n      client:\n        url: http://localhost:9001\n        instance:\n          # 默认使用的是主机名注册，改为使用ip注册\n          prefer-ip: true\n  cloud:\n    loadbalancer:\n      ribbon:\n        enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    # nacos配置\n    nacos:\n      discovery:\n        server-addr: ${spring.cloud.nacos.config.server-addr}\n        namespace: ${spring.cloud.nacos.config.namespace}\n        group: ${spring.cloud.nacos.config.group}\n        username: ${spring.cloud.nacos.config.username}\n        password: ${spring.cloud.nacos.config.password}\n    sentinel:\n      transport:\n        dashboard: localhost:9002\n        port: 8719\n      scg:\n        fallback:\n          mode: response\n          response-status: 455\n          response-body: error!\n    # gateway配置\n    gateway:\n      default-filters:\n        - DedupeResponseHeader=Access-Control-Allow-Origin\n      globalcors:\n        add-to-simple-url-handler-mapping: true\n        corsConfigurations:\n          \'[/**]\':\n            allowed-origins-patterns: \"*\"\n            allowed-methods: \"*\"\n            allowed-headers: \"*\"\n            allow-credentials: true\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        - id: snowy-web-app\n          uri: lb://snowy-web-app\n          predicates:\n            - Path=/api/webapp/**\n          filters:\n            - SwaggerHeaderFilter\n            - StripPrefix=2 #去掉Path中前两个节点\n            - name: Retry\n              args:\n                retries: 1 #重试次数\n        - id: snowy-web-app\n          uri: lb://snowy-web-app\n          predicates:\n            - Path=/druid/**\n          filters:\n            - SwaggerHeaderFilter\n            - name: Retry\n              args:\n                retries: 1 #重试次数\n        - id: snowy-biz-app\n          uri: lb://snowy-biz-app\n          predicates:\n            - Path=/api/bizapp/**\n          filters:\n            - SwaggerHeaderFilter\n            - StripPrefix=2 #去掉Path中前两个节点\n            - name: Retry\n              args:\n                retries: 1 #重试次数\n\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      show-details: \"ALWAYS\"\n\n#########################################\n# sa-token configuration\n#########################################\nsa-token:\n  token-name: token\n  timeout: 2592000\n  active-timeout: -1\n  is-concurrent: true\n  is-share: false\n  max-login-count: -1\n  token-style: random-32\n  is-log: false\n  is-print: false\n\n  # sa-token alone-redis configuration\n  alone-redis:\n    database: 2\n    host: ${spring.data.redis.host}\n    port: ${spring.data.redis.port}\n    password: ${spring.data.redis.password}\n    timeout: ${spring.data.redis.timeout}\n    lettuce:\n      pool:\n        max-active: ${spring.data.redis.lettuce.pool.max-active}\n        max-wait: ${spring.data.redis.lettuce.pool.max-wait}\n        max-idle: ${spring.data.redis.lettuce.pool.max-idle}\n        min-idle: ${spring.data.redis.lettuce.pool.min-idle}\n\n  # sso configuration      \n  sso-client:\n    client: \n    auth-url: \n    signout-url: \n    push-url: \n    secret-key: \n    \n# knife4j 文档聚合\nknife4j:\n  enable: true\n  production: false\n  basic:\n    enable: true\n    username: admin\n    password: Abc131419..\n  setting:\n    enableOpenApi: false\n    enableSwaggerModels: false\n    enableFooter: false\n    enableFooterCustom: true\n    footerCustomContent: Apache License 2.0 | Copyright 2022-[SNOWY](https://www.xiaonuo.vip)\n  # gateway聚合swagger文档\n  gateway:\n    enabled: true\n    # 排序规则(tag/operation排序自4.2.0版本新增)\n    # 取值：alpha-默认排序规则，官方swagger-ui默认实现,order-Knife4j提供的增强排序规则，开发者可扩展x-order，根据数值来自定义排序\n    tags-sorter: order\n    operations-sorter: order\n     # 指定手动配置的模式(默认为该模式)\n    strategy: manual\n    routes:\n      - name: SNOWY-PLUGIN-AUTH\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-AUTH\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-BIZ\n        url: /api/bizapp/v3/api-docs/SNOWY-PLUGIN-BIZ\n        service-name: snowy-biz-app\n        context-path: /\n      - name: SNOWY-PLUGIN-CLIENT\n        url: /api/bizapp/v3/api-docs/SNOWY-PLUGIN-CLIENT\n        service-name: snowy-biz-app\n        context-path: /\n      - name: SNOWY-PLUGIN-DEV\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-DEV\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-GEN\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-GEN\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-MOBILE\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-MOBILE\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-SYS\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-SYS\n        service-name: snowy-web-app\n        context-path: /', '6712c7f6ee4b39fdee8722dbecc6bb34', '2024-04-24 14:34:18', '2025-09-30 07:02:33', NULL, '0:0:0:0:0:0:0:1', '', 'snowy-cloud-dev', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (4, 'snowy-xxl-job-app-dev.yaml', 'dev', '# 服务配置\nserver:\n  port: 9004\n  servlet:\n    context-path: /xxl-job-admin\n\n# spring相关配置\nspring:\n  boot:\n    admin:\n      client:\n        url: http://localhost:9001\n        instance:\n          # 默认使用的是主机名注册，改为使用ip注册\n          prefer-ip: true\n  cloud:\n    loadbalancer:\n      ribbon:\n        enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    # nacos配置\n    nacos:\n      discovery:\n        server-addr: ${spring.cloud.nacos.config.server-addr}\n        namespace: ${spring.cloud.nacos.config.namespace}\n        group: ${spring.cloud.nacos.config.group}\n        username: ${spring.cloud.nacos.config.username}\n        password: ${spring.cloud.nacos.config.password}\n        metadata:\n          management.context-path: ${server.servlet.context-path}/actuator\n  datasource:\n    ### xxl-job, datasource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:53306/snowy-cloud-job?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&nullCatalogMeansCurrent=true\n    username: root\n    password: Abc131419..\n    ### datasource-pool\n    type: com.zaxxer.hikari.HikariDataSource\n    hikari:\n      minimum-idle: 10\n      maximum-pool-size: 30\n      auto-commit: true\n      idle-timeout: 30000\n      pool-name: HikariCP\n      max-lifetime: 900000\n      connection-timeout: 10000\n      connection-test-query: SELECT 1\n      validation-timeout: 1000\n  ### resources\n  resources:\n    static-locations: classpath:/static/\n  mvc:\n    servlet:\n      load-on-startup: 0\n    static-path-pattern: /static/**\n  ### freemarker\n  freemarker:\n    templateLoaderPath: classpath:/templates/\n    suffix: .ftl\n    charset: UTF-8\n    request-context-attribute: request\n    settings:\n      number_format: 0.##########\n  ### xxl-job, email\n  mail:\n    host: smtp.qq.com\n    port: 25\n    username: xxx@qq.com\n    from: xxx@qq.com\n    password: xxx\n    properties:\n      mail:\n        smtp:\n          auth: true\n          starttls:\n            enable: true\n            required: true\n          socketFactory:\n            class: javax.net.ssl.SSLSocketFactory\n\n### mybatis\nmybatis:\n  mapper-locations: classpath:/mybatis-mapper/*Mapper.xml\n# type-aliases-package: com.xxl.job.admin.core.model\n\n### xxl-job\n### xxl-job, access token\nxxl:\n  job:\n    accessToken: 123456\n    ### xxl-job, i18n (default is zh_CN, and you can choose \"zh_CN\", \"zh_TC\" and \"en\")\n    i18n: zh_CN\n    ## xxl-job, triggerpool max size\n    triggerpool:\n      fast:\n        max: 200\n      slow:\n        max: 100\n    ### xxl-job, log retention days\n    logretentiondays: 30\n\n### actuator\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      show-details: \"ALWAYS\"\n  health:\n    mail:\n      enabled: false', 'e1f829e38bf25686f30b07eeb6a5c5e5', '2024-04-24 14:34:37', '2025-09-30 07:18:54', NULL, '0:0:0:0:0:0:0:1', '', 'snowy-cloud-dev', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (5, 'snowy-web-app-dev.yaml', 'dev', '#########################################\n# server configuration\n#########################################\nserver:\n  port: 9101\n\n#########################################\n# spring profiles configuration\n#########################################\nspring:\n\n  #########################################\n  # multipart configuration\n  #########################################\n  servlet:\n    multipart:\n      max-request-size: 100MB\n      max-file-size: 100MB\n\n  #########################################\n  # mvc configuration\n  #########################################\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n\n  #########################################\n  # main configuration\n  #########################################\n  main:\n    allow-circular-references: true\n\n  #########################################\n  # boot configuration\n  #########################################\n  boot:\n    admin:\n      client:\n        url: http://localhost:9001\n        instance:\n          # 默认使用的是主机名注册，改为使用ip注册\n          prefer-ip: true\n\n  #########################################\n  # cloud configuration\n  #########################################\n  cloud:\n    loadbalancer:\n      ribbon:\n        enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    nacos:\n      discovery:\n        server-addr: ${spring.cloud.nacos.config.server-addr}\n        namespace: ${spring.cloud.nacos.config.namespace}\n        group: ${spring.cloud.nacos.config.group}\n        username: ${spring.cloud.nacos.config.username}\n        password: ${spring.cloud.nacos.config.password}\n\n  #########################################\n  # datasource configuration\n  #########################################\n\n  # mysql\n  datasource:\n    dynamic:\n      datasource:\n        master:\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: jdbc:mysql://localhost:53306/snowy-cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&useInformationSchema=true&rewriteBatchedStatements=true\n          username: root\n          password: Abc131419..\n      strict: true\n\n  # oracle\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: oracle.jdbc.driver.OracleDriver\n#          url: jdbc:oracle:thin:@//127.0.0.1:1521/XE?remarksReporting=true\n#          username: SNOWY\n#          password: 12345678\n#      strict: true\n\n  # mssql\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver\n#          url: jdbc:sqlserver://localhost:1433;DatabaseName=SNOWY\n#          username: sa\n#          password: 12345678\n#      strict: true\n\n  # dm database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: dm.jdbc.driver.DmDriver\n#          url: jdbc:dm://localhost:5236/SYSDBA\n#          username: SYSDBA\n#          password: SYSDBA\n#      strict: true\n\n  # kingbase database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.kingbase8.Driver\n#          url: jdbc:kingbase8://localhost:54321/snowy\n#          username: SYSTEM\n#          password: 123456\n#      strict: true\n\n      # druid global configuration\n      public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAMWiTVtdXFVrgFHDDKELZM0SywkWY3KjugN90eY5Sogon1j8Y0ClPF7nx3FuE7pAeBKiv7ChIS0vvx/59WUpKmUCAwEAAQ==\n      druid:\n        initial-size: 5\n        max-active: 20\n        min-idle: 5\n        max-wait: 60000\n        pool-prepared-statements: true\n        max-pool-prepared-statement-per-connection-size: 20\n        validation-query-timeout: 2000\n        test-on-borrow: false\n        test-on-return: false\n        test-while-idle: true\n        time-between-eviction-runs-millis: 6000\n        min-evictable-idle-time-millis: 300000\n        filters: stat\n        break-after-acquire-failure: false\n\n    # druid monitor configuration\n    druid:\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        allow: \"\"\n\n  #########################################\n  # jackson configuration\n  #########################################\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n    locale: zh_CN\n\n  #########################################\n  # redis configuration\n  #########################################\n  data:\n    redis:\n      database: 1\n      host: 127.0.0.1\n      port: 56379\n      password: Abc131419..\n      timeout: 10s\n      lettuce:\n        pool:\n          max-active: 200\n          max-wait: -1ms\n          max-idle: 10\n          min-idle: 0\n\n#########################################\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\n#########################################\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      show-details: \"ALWAYS\"\n\n#########################################\n# mybatis-plus configuration\n#########################################\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    banner: false\n    enable-sql-runner: true\n    db-config:\n      id-type: ASSIGN_ID\n      logic-delete-field: DELETE_FLAG\n      logic-delete-value: DELETED\n      logic-not-delete-value: NOT_DELETE\n  mapper-locations: classpath*:vip/xiaonuo/**/mapping/*.xml,com/bstek/**/mapping/*.xml\n  type-handlers-package: vip.xiaonuo.common.handler\n\n#########################################\n# easy-trans configuration\n#########################################\neasy-trans:\n  is-enable-redis: true\n  is-enable-global: true\n  is-enable-tile: true\n  is-enable-cloud: false\n\n#########################################\n# sa-token configuration\n#########################################\nsa-token:\n  token-name: token\n  timeout: 2592000\n  active-timeout: -1\n  is-concurrent: true\n  is-share: false\n  max-login-count: -1\n  token-style: random-32\n  is-log: false\n  is-print: false\n\n# sa-token alone-redis configuration\n  alone-redis:\n    database: 2\n    host: ${spring.data.redis.host}\n    port: ${spring.data.redis.port}\n    password: ${spring.data.redis.password}\n    timeout: ${spring.data.redis.timeout}\n    lettuce:\n      pool:\n        max-active: ${spring.data.redis.lettuce.pool.max-active}\n        max-wait: ${spring.data.redis.lettuce.pool.max-wait}\n        max-idle: ${spring.data.redis.lettuce.pool.max-idle}\n        min-idle: ${spring.data.redis.lettuce.pool.min-idle}\n\n  # sso configuration      \n  sso-client:\n    client: \n    auth-url: \n    signout-url: \n    push-url: \n    secret-key: \n    \n#########################################\n# knife4j configuration\n#########################################\nknife4j:\n  enable: true\n  production: false\n  basic:\n    enable: false\n    username: admin\n    password: 123456\n  setting:\n    enableOpenApi: false\n    enableSwaggerModels: false\n    enableFooter: false\n    enableFooterCustom: true\n    footerCustomContent: Apache License 2.0 | Copyright 2022-[SNOWY](https://www.xiaonuo.vip)\n\n# knife4j doc groups\nspringdoc:\n  default-flat-param-object: true\n  group-configs:\n    - group: SNOWY-PLUGIN-AUTH\n      display-name: SNOWY-PLUGIN-AUTH\n      packages-to-scan: vip.xiaonuo.auth\n    - group: SNOWY-PLUGIN-DEV\n      display-name: SNOWY-PLUGIN-DEV\n      packages-to-scan: vip.xiaonuo.dev\n    - group: SNOWY-PLUGIN-GEN\n      display-name: SNOWY-PLUGIN-GEN\n      packages-to-scan: vip.xiaonuo.gen\n    - group: SNOWY-PLUGIN-MOBILE\n      display-name: SNOWY-PLUGIN-MOBILE\n      packages-to-scan: vip.xiaonuo.mobile\n    - group: SNOWY-PLUGIN-SYS\n      display-name: SNOWY-PLUGIN-SYS\n      packages-to-scan: vip.xiaonuo.sys\n\n\n#########################################\n# snowy configuration\n#########################################\nsnowy:\n  config:\n    # common configuration\n    common:\n      backend-url: http://localhost:9101\n      file-url: http://localhost:9003/api/webapp\n\n# plugin dev-sms configuration\nsms-oa:\n  config-type: yaml\n  core-pool-size: 20\n  queue-capacity: 20\n  max-pool-size: 20', '60e21333a153480238a2e36b8a392e77', '2024-04-24 14:35:03', '2025-09-30 07:28:14', NULL, '0:0:0:0:0:0:0:1', '', 'snowy-cloud-dev', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (6, 'snowy-biz-app-dev.yaml', 'dev', '#########################################\n# server configuration\n#########################################\nserver:\n  port: 9102\n\n#########################################\n# spring profiles configuration\n#########################################\nspring:\n\n  #########################################\n  # multipart configuration\n  #########################################\n  servlet:\n    multipart:\n      max-request-size: 100MB\n      max-file-size: 100MB\n\n  #########################################\n  # mvc configuration\n  #########################################\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n\n  #########################################\n  # main configuration\n  #########################################\n  main:\n    allow-circular-references: true\n\n  #########################################\n  # boot configuration\n  #########################################\n  boot:\n    admin:\n      client:\n        url: http://localhost:9001\n        instance:\n          # 默认使用的是主机名注册，改为使用ip注册\n          prefer-ip: true\n\n  #########################################\n  # cloud configuration\n  #########################################\n  cloud:\n    loadbalancer:\n      ribbon:\n        enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    nacos:\n      discovery:\n        server-addr: ${spring.cloud.nacos.config.server-addr}\n        namespace: ${spring.cloud.nacos.config.namespace}\n        group: ${spring.cloud.nacos.config.group}\n        username: ${spring.cloud.nacos.config.username}\n        password: ${spring.cloud.nacos.config.password}\n\n  #########################################\n  # datasource configuration\n  #########################################\n\n  # mysql\n  datasource:\n    dynamic:\n      datasource:\n        master:\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: jdbc:mysql://localhost:53306/snowy-cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&useInformationSchema=true&rewriteBatchedStatements=true\n          username: root\n          password: Abc131419..\n      strict: true\n\n  # oracle\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: oracle.jdbc.driver.OracleDriver\n#          url: jdbc:oracle:thin:@//127.0.0.1:1521/XE?remarksReporting=true\n#          username: SNOWY\n#          password: 12345678\n#      strict: true\n\n  # mssql\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver\n#          url: jdbc:sqlserver://localhost:1433;DatabaseName=SNOWY\n#          username: sa\n#          password: 12345678\n#      strict: true\n\n  # dm database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: dm.jdbc.driver.DmDriver\n#          url: jdbc:dm://localhost:5236/SYSDBA\n#          username: SYSDBA\n#          password: SYSDBA\n#      strict: true\n\n  # kingbase database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.kingbase8.Driver\n#          url: jdbc:kingbase8://localhost:54321/snowy\n#          username: SYSTEM\n#          password: 123456\n#      strict: true\n\n      # druid global configuration\n      public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAMWiTVtdXFVrgFHDDKELZM0SywkWY3KjugN90eY5Sogon1j8Y0ClPF7nx3FuE7pAeBKiv7ChIS0vvx/59WUpKmUCAwEAAQ==\n      druid:\n        initial-size: 5\n        max-active: 20\n        min-idle: 5\n        max-wait: 60000\n        pool-prepared-statements: true\n        max-pool-prepared-statement-per-connection-size: 20\n        validation-query-timeout: 2000\n        test-on-borrow: false\n        test-on-return: false\n        test-while-idle: true\n        time-between-eviction-runs-millis: 6000\n        min-evictable-idle-time-millis: 300000\n        filters: stat\n        break-after-acquire-failure: false\n\n    # druid monitor configuration\n    druid:\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n\n  #########################################\n  # jackson configuration\n  #########################################\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n    locale: zh_CN\n\n  #########################################\n  # redis configuration\n  #########################################\n  data:\n    redis:\n      database: 1\n      host: 127.0.0.1\n      port: 56379\n      password: Abc131419..\n      timeout: 10s\n      lettuce:\n        pool:\n          max-active: 200\n          max-wait: -1ms\n          max-idle: 10\n          min-idle: 0\n\n#########################################\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\n#########################################\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      show-details: \"ALWAYS\"\n\n#########################################\n# mybatis-plus configuration\n#########################################\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    banner: false\n    enable-sql-runner: true\n    db-config:\n      id-type: ASSIGN_ID\n      logic-delete-field: DELETE_FLAG\n      logic-delete-value: DELETED\n      logic-not-delete-value: NOT_DELETE\n  mapper-locations: classpath*:vip/xiaonuo/**/mapping/*.xml,com/bstek/**/mapping/*.xml\n  type-handlers-package: vip.xiaonuo.common.handler\n\n#########################################\n# easy-trans configuration\n#########################################\neasy-trans:\n  is-enable-redis: true\n  is-enable-global: true\n  is-enable-tile: true\n  is-enable-cloud: true\n\n#########################################\n# sa-token configuration\n#########################################\nsa-token:\n  token-name: token\n  timeout: 2592000\n  active-timeout: -1\n  is-concurrent: true\n  is-share: false\n  max-login-count: -1\n  token-style: random-32\n  is-log: false\n  is-print: false\n\n# sa-token alone-redis configuration\n  alone-redis:\n    database: 2\n    host: ${spring.data.redis.host}\n    port: ${spring.data.redis.port}\n    password: ${spring.data.redis.password}\n    timeout: ${spring.data.redis.timeout}\n    lettuce:\n      pool:\n        max-active: ${spring.data.redis.lettuce.pool.max-active}\n        max-wait: ${spring.data.redis.lettuce.pool.max-wait}\n        max-idle: ${spring.data.redis.lettuce.pool.max-idle}\n        min-idle: ${spring.data.redis.lettuce.pool.min-idle}\n\n  # sso configuration      \n  sso-client:\n    client: \n    auth-url: \n    signout-url: \n    push-url: \n    secret-key: \n\n#########################################\n# knife4j configuration\n#########################################\nknife4j:\n  enable: true\n  production: false\n  basic:\n    enable: false\n    username: admin\n    password: 123456\n  setting:\n    enableOpenApi: false\n    enableSwaggerModels: false\n    enableFooter: false\n    enableFooterCustom: true\n    footerCustomContent: Apache License 2.0 | Copyright 2022-[SNOWY](https://www.xiaonuo.vip)\n\n# knife4j doc groups\nspringdoc:\n  default-flat-param-object: true\n  group-configs:\n    - group: SNOWY-PLUGIN-BIZ\n      display-name: SNOWY-PLUGIN-BIZ\n      packages-to-scan: vip.xiaonuo.biz\n    - group: SNOWY-PLUGIN-CLIENT\n      display-name: SNOWY-PLUGIN-CLIENT\n      packages-to-scan: vip.xiaonuo.client\n\n#########################################\n# snowy configuration\n#########################################\nsnowy:\n  config:\n# common configuration\n    common:\n      front-url: http://localhost:9000\n      backend-url: http://localhost:9102', '702b134b96755fc4d5a732089d4340ee', '2024-04-24 14:35:18', '2025-09-30 07:29:29', NULL, '0:0:0:0:0:0:0:1', '', 'snowy-cloud-dev', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (7, 'snowy-actuator-app-test.yaml', 'test', '# 服务配置\r\nserver:\r\n  port: 9001\r\n\r\n# spring相关配置\r\nspring:\r\n  boot:\r\n    admin:\r\n      client:\r\n        url: http://localhost:9001\r\n        instance:\r\n          # 默认使用的是主机名注册，改为使用ip注册\r\n          prefer-ip: true\r\n  cloud:\r\n    # nacos配置\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${spring.cloud.nacos.config.server-addr}\r\n        namespace: ${spring.cloud.nacos.config.namespace}\r\n        group: ${spring.cloud.nacos.config.group}\r\n        username: ${spring.cloud.nacos.config.username}\r\n        password: ${spring.cloud.nacos.config.password}\r\n\r\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n    health:\r\n      show-details: \"ALWAYS\"', '62b64acc7e8916c19b2432b6ef0ad089', '2024-04-24 14:36:35', '2024-04-24 14:36:35', 'nacos', '192.168.0.105', '', 'snowy-cloud-test', NULL, NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (8, 'snowy-sentinel-app-test.yaml', 'test', '# 服务配置\r\nserver:\r\n  port: 9002\r\n  servlet:\r\n    #spring settings\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n      enabled: true\r\n    #cookie name setting\r\n    session:\r\n      cookie:\r\n        name:\r\n          sentinel_dashboard_cookie: sentinel_dashboard_cookie\r\n\r\n# spring相关配置\r\nspring:\r\n  mvc:\r\n    pathmatch:\r\n      matching-strategy: ant_path_matcher\r\n  boot:\r\n    admin:\r\n      client:\r\n        url: http://localhost:9001\r\n        instance:\r\n          # 默认使用的是主机名注册，改为使用ip注册\r\n          prefer-ip: true\r\n  cloud:\r\n    # nacos配置\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${spring.cloud.nacos.config.server-addr}\r\n        namespace: ${spring.cloud.nacos.config.namespace}\r\n        group: ${spring.cloud.nacos.config.group}\r\n        username: ${spring.cloud.nacos.config.username}\r\n        password: ${spring.cloud.nacos.config.password}\r\n\r\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n    health:\r\n      show-details: \"ALWAYS\"\r\n\r\n# logging settings\r\nlogging:\r\n  level:\r\n    org:\r\n      springframework:\r\n        web: INFO\r\n  file:\r\n    name: ${user.home}/logs/csp/sentinel-dashboard.log\r\n  pattern:\r\n    file: \'%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n\'\r\n    console: \'%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n\'\r\n\r\n# auth settings\r\nauth:\r\n  filter:\r\n    exclude-urls: /,/auth/login,/auth/logout,/registry/machine,/version,/actuator/**,/details\r\n    exclude-url-suffixes: htm,html,js,css,map,ico,ttf,woff,png\r\n  # If auth.enabled=false, Sentinel console disable login\r\n  username: sentinel\r\n  password: sentinel\r\n\r\n# Inject the dashboard version. It\'s required to enable\r\n# filtering in pom.xml for this resource file.\r\nsentinel:\r\n  dashboard:\r\n    version: 1.8.7', 'b87739eb375a52be36b6b6f125d231c2', '2024-04-24 14:36:57', '2024-04-24 14:36:57', 'nacos', '192.168.0.105', '', 'snowy-cloud-test', NULL, NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (9, 'snowy-gateway-app-test.yaml', 'test', '# 服务配置\nserver:\n  port: 9003\n\n# spring相关配置\nspring:\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:3306/snowy-cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&useInformationSchema=true&rewriteBatchedStatements=true\n    username: root\n    password: 123456\n\n# Oracle数据库\n#spring:\n#  datasource:\n#    driver-class-name: oracle.jdbc.OracleDriver\n#    url: jdbc:oracle:thin:@localhost:1521:xe\n#    username: SNOWY-CLOUD-ORACLE\n#    password: 123456\n\n# SQLServer配置\n#spring:\n#  datasource:\n#    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver\n#    url: jdbc:sqlserver://localhost:1433;DatabaseName=snowy-cloud-mssql\n#    username: sa\n#    password: 123456\n\n# PostgreSQL配置\n#spring:\n#  datasource:\n#    driverClassName: org.postgresql.Driver\n#    url: jdbc:postgresql://127.0.0.1:5432/snowy-cloud-postgresql\n#    username: postgres\n#    password: 123456\n\n# 达梦数据库配置\n#spring:\n#  datasource:\n#    driver-class-name: dm.jdbc.driver.DmDriver\n#    url: jdbc:dm://localhost:5236/SYSDBA\n#    username: SYSDBA\n#    password: 123456789\n\n# 人大金仓数据库\n#spring:\n#  datasource:\n#    driver-class-name: com.kingbase8.Driver\n#    url: jdbc:kingbase8://localhost:54321/snowy-cloud-kingbase\n#    username: system\n#    password: 123456\n# #人大金仓数据库兼容问题，不需要加在sql语句中加public的解决方法：\n# #在根目录data下的kingbase.conf文档里面找到search_path = \'\"$user\",PUBLIC,sys_catalog\'进行替换放开\n# #重启数据库即可完全兼容，注意 sql中不能出现mysql中的关键字的单引号\n\n  # redis相关配置\n  data:\n    redis:\n      database: 1\n      host: 127.0.0.1\n      port: 6379\n      password: \n      timeout: 10s\n      lettuce:\n        pool:\n          max-active: 200\n          max-wait: -1ms\n          max-idle: 10\n          min-idle: 0\n\n  boot:\n    admin:\n      client:\n        url: http://localhost:9001\n        instance:\n          # 默认使用的是主机名注册，改为使用ip注册\n          prefer-ip: true\n  cloud:\n    loadbalancer:\n      ribbon:\n        enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    # nacos配置\n    nacos:\n      discovery:\n        server-addr: ${spring.cloud.nacos.config.server-addr}\n        namespace: ${spring.cloud.nacos.config.namespace}\n        group: ${spring.cloud.nacos.config.group}\n        username: ${spring.cloud.nacos.config.username}\n        password: ${spring.cloud.nacos.config.password}\n    sentinel:\n      transport:\n        dashboard: localhost:9002\n        port: 8719\n      scg:\n        fallback:\n          mode: response\n          response-status: 455\n          response-body: error!\n    # gateway配置\n    gateway:\n      default-filters:\n        - DedupeResponseHeader=Access-Control-Allow-Origin\n      globalcors:\n        add-to-simple-url-handler-mapping: true\n        corsConfigurations:\n          \'[/**]\':\n            allowed-origins-patterns: \"*\"\n            allowed-methods: \"*\"\n            allowed-headers: \"*\"\n            allow-credentials: true\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        - id: snowy-web-app\n          uri: lb://snowy-web-app\n          predicates:\n            - Path=/api/webapp/**\n          filters:\n            - SwaggerHeaderFilter\n            - StripPrefix=2 #去掉Path中前两个节点\n            - name: Retry\n              args:\n                retries: 1 #重试次数\n        - id: snowy-web-app\n          uri: lb://snowy-web-app\n          predicates:\n            - Path=/druid/**\n          filters:\n            - SwaggerHeaderFilter\n            - name: Retry\n              args:\n                retries: 1 #重试次数\n        - id: snowy-biz-app\n          uri: lb://snowy-biz-app\n          predicates:\n            - Path=/api/bizapp/**\n          filters:\n            - SwaggerHeaderFilter\n            - StripPrefix=2 #去掉Path中前两个节点\n            - name: Retry\n              args:\n                retries: 1 #重试次数\n\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      show-details: \"ALWAYS\"\n\n#########################################\n# sa-token configuration\n#########################################\nsa-token:\n  token-name: token\n  timeout: 2592000\n  active-timeout: -1\n  is-concurrent: true\n  is-share: false\n  max-login-count: -1\n  token-style: random-32\n  is-log: false\n  is-print: false\n\n  # sa-token alone-redis configuration\n  alone-redis:\n    database: 2\n    host: ${spring.data.redis.host}\n    port: ${spring.data.redis.port}\n    password: ${spring.data.redis.password}\n    timeout: ${spring.data.redis.timeout}\n    lettuce:\n      pool:\n        max-active: ${spring.data.redis.lettuce.pool.max-active}\n        max-wait: ${spring.data.redis.lettuce.pool.max-wait}\n        max-idle: ${spring.data.redis.lettuce.pool.max-idle}\n        min-idle: ${spring.data.redis.lettuce.pool.min-idle}\n\n  # sso configuration      \n  sso-client:\n    client: \n    auth-url: \n    signout-url: \n    push-url: \n    secret-key: \n    \n# knife4j 文档聚合\nknife4j:\n  enable: true\n  production: false\n  basic:\n    enable: true\n    username: admin\n    password: 123456\n  setting:\n    enableOpenApi: false\n    enableSwaggerModels: false\n    enableFooter: false\n    enableFooterCustom: true\n    footerCustomContent: Apache License 2.0 | Copyright 2022-[SNOWY](https://www.xiaonuo.vip)\n  # gateway聚合swagger文档\n  gateway:\n    enabled: true\n    # 排序规则(tag/operation排序自4.2.0版本新增)\n    # 取值：alpha-默认排序规则，官方swagger-ui默认实现,order-Knife4j提供的增强排序规则，开发者可扩展x-order，根据数值来自定义排序\n    tags-sorter: order\n    operations-sorter: order\n     # 指定手动配置的模式(默认为该模式)\n    strategy: manual\n    routes:\n      - name: SNOWY-PLUGIN-AUTH\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-AUTH\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-BIZ\n        url: /api/bizapp/v3/api-docs/SNOWY-PLUGIN-BIZ\n        service-name: snowy-biz-app\n        context-path: /\n      - name: SNOWY-PLUGIN-CLIENT\n        url: /api/bizapp/v3/api-docs/SNOWY-PLUGIN-CLIENT\n        service-name: snowy-biz-app\n        context-path: /\n      - name: SNOWY-PLUGIN-DEV\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-DEV\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-GEN\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-GEN\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-MOBILE\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-MOBILE\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-SYS\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-SYS\n        service-name: snowy-web-app\n        context-path: /', '80ca6295f93ce62b25c6b160b90ece0d', '2024-04-24 14:37:20', '2025-09-24 17:26:29', NULL, '192.168.0.105', '', 'snowy-cloud-test', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (10, 'snowy-xxl-job-app-test.yaml', 'test', '# 服务配置\r\nserver:\r\n  port: 9004\r\n  servlet:\r\n    context-path: /xxl-job-admin\r\n\r\n# spring相关配置\r\nspring:\r\n  boot:\r\n    admin:\r\n      client:\r\n        url: http://localhost:9001\r\n        instance:\r\n          # 默认使用的是主机名注册，改为使用ip注册\r\n          prefer-ip: true\r\n  cloud:\r\n    loadbalancer:\r\n      ribbon:\r\n        enabled: false\r\n      cache:\r\n        enabled: true\r\n        caffeine:\r\n          spec: initialCapacity=500,expireAfterWrite=5s\r\n    # nacos配置\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${spring.cloud.nacos.config.server-addr}\r\n        namespace: ${spring.cloud.nacos.config.namespace}\r\n        group: ${spring.cloud.nacos.config.group}\r\n        username: ${spring.cloud.nacos.config.username}\r\n        password: ${spring.cloud.nacos.config.password}\r\n        metadata:\r\n          management.context-path: ${server.servlet.context-path}/actuator\r\n      config:\r\n        server-addr: localhost:8848 #Nacos配置中心地址\r\n        file-extension: yml #指定yml格式的配置\r\n        username: nacos\r\n        password: nacos\r\n  datasource:\r\n    ### xxl-job, datasource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/snowy-cloud-job?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&nullCatalogMeansCurrent=true\r\n    username: root\r\n    password: 123456\r\n    ### datasource-pool\r\n    type: com.zaxxer.hikari.HikariDataSource\r\n    hikari:\r\n      minimum-idle: 10\r\n      maximum-pool-size: 30\r\n      auto-commit: true\r\n      idle-timeout: 30000\r\n      pool-name: HikariCP\r\n      max-lifetime: 900000\r\n      connection-timeout: 10000\r\n      connection-test-query: SELECT 1\r\n      validation-timeout: 1000\r\n  ### resources\r\n  resources:\r\n    static-locations: classpath:/static/\r\n  mvc:\r\n    servlet:\r\n      load-on-startup: 0\r\n    static-path-pattern: /static/**\r\n  ### freemarker\r\n  freemarker:\r\n    templateLoaderPath: classpath:/templates/\r\n    suffix: .ftl\r\n    charset: UTF-8\r\n    request-context-attribute: request\r\n    settings:\r\n      number_format: 0.##########\r\n  ### xxl-job, email\r\n  mail:\r\n    host: smtp.qq.com\r\n    port: 25\r\n    username: xxx@qq.com\r\n    from: xxx@qq.com\r\n    password: xxx\r\n    properties:\r\n      mail:\r\n        smtp:\r\n          auth: true\r\n          starttls:\r\n            enable: true\r\n            required: true\r\n          socketFactory:\r\n            class: javax.net.ssl.SSLSocketFactory\r\n\r\n### mybatis\r\nmybatis:\r\n  mapper-locations: classpath:/mybatis-mapper/*Mapper.xml\r\n# type-aliases-package: com.xxl.job.admin.core.model\r\n\r\n### xxl-job\r\n### xxl-job, access token\r\nxxl:\r\n  job:\r\n    accessToken: 123456\r\n    ### xxl-job, i18n (default is zh_CN, and you can choose \"zh_CN\", \"zh_TC\" and \"en\")\r\n    i18n: zh_CN\r\n    ## xxl-job, triggerpool max size\r\n    triggerpool:\r\n      fast:\r\n        max: 200\r\n      slow:\r\n        max: 100\r\n    ### xxl-job, log retention days\r\n    logretentiondays: 30\r\n\r\n### actuator\r\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n    health:\r\n      show-details: \"ALWAYS\"\r\n  health:\r\n    mail:\r\n      enabled: false', '544e57a2a3ce12e2c5f26e865a297f16', '2024-04-24 14:37:43', '2024-04-24 14:37:43', 'nacos', '192.168.0.105', '', 'snowy-cloud-test', NULL, NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (11, 'snowy-web-app-test.yaml', 'test', '#########################################\n# server configuration\n#########################################\nserver:\n  port: 9101\n\n#########################################\n# spring profiles configuration\n#########################################\nspring:\n\n  #########################################\n  # multipart configuration\n  #########################################\n  servlet:\n    multipart:\n      max-request-size: 100MB\n      max-file-size: 100MB\n\n  #########################################\n  # mvc configuration\n  #########################################\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n\n  #########################################\n  # main configuration\n  #########################################\n  main:\n    allow-circular-references: true\n\n  #########################################\n  # boot configuration\n  #########################################\n  boot:\n    admin:\n      client:\n        url: http://localhost:9001\n        instance:\n          # 默认使用的是主机名注册，改为使用ip注册\n          prefer-ip: true\n\n  #########################################\n  # cloud configuration\n  #########################################\n  cloud:\n    loadbalancer:\n      ribbon:\n        enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    nacos:\n      discovery:\n        server-addr: ${spring.cloud.nacos.config.server-addr}\n        namespace: ${spring.cloud.nacos.config.namespace}\n        group: ${spring.cloud.nacos.config.group}\n        username: ${spring.cloud.nacos.config.username}\n        password: ${spring.cloud.nacos.config.password}\n\n  #########################################\n  # datasource configuration\n  #########################################\n\n  # mysql\n  datasource:\n    dynamic:\n      datasource:\n        master:\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: jdbc:mysql://localhost:3306/snowy-cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&useInformationSchema=true&rewriteBatchedStatements=true\n          username: root\n          password: 123456\n      strict: true\n\n  # oracle\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: oracle.jdbc.driver.OracleDriver\n#          url: jdbc:oracle:thin:@//127.0.0.1:1521/XE?remarksReporting=true\n#          username: SNOWY\n#          password: 12345678\n#      strict: true\n\n  # mssql\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver\n#          url: jdbc:sqlserver://localhost:1433;DatabaseName=SNOWY\n#          username: sa\n#          password: 12345678\n#      strict: true\n\n  # dm database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: dm.jdbc.driver.DmDriver\n#          url: jdbc:dm://localhost:5236/SYSDBA\n#          username: SYSDBA\n#          password: SYSDBA\n#      strict: true\n\n  # kingbase database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.kingbase8.Driver\n#          url: jdbc:kingbase8://localhost:54321/snowy\n#          username: SYSTEM\n#          password: 123456\n#      strict: true\n\n      # druid global configuration\n      public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAMWiTVtdXFVrgFHDDKELZM0SywkWY3KjugN90eY5Sogon1j8Y0ClPF7nx3FuE7pAeBKiv7ChIS0vvx/59WUpKmUCAwEAAQ==\n      druid:\n        initial-size: 5\n        max-active: 20\n        min-idle: 5\n        max-wait: 60000\n        pool-prepared-statements: true\n        max-pool-prepared-statement-per-connection-size: 20\n        validation-query-timeout: 2000\n        test-on-borrow: false\n        test-on-return: false\n        test-while-idle: true\n        time-between-eviction-runs-millis: 6000\n        min-evictable-idle-time-millis: 300000\n        filters: stat\n        break-after-acquire-failure: false\n\n    # druid monitor configuration\n    druid:\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        allow: \"\"\n\n  #########################################\n  # jackson configuration\n  #########################################\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n    locale: zh_CN\n\n  #########################################\n  # redis configuration\n  #########################################\n  data:\n    redis:\n      database: 1\n      host: 127.0.0.1\n      port: 6379\n      password:\n      timeout: 10s\n      lettuce:\n        pool:\n          max-active: 200\n          max-wait: -1ms\n          max-idle: 10\n          min-idle: 0\n\n#########################################\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\n#########################################\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      show-details: \"ALWAYS\"\n\n#########################################\n# mybatis-plus configuration\n#########################################\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    banner: false\n    enable-sql-runner: true\n    db-config:\n      id-type: ASSIGN_ID\n      logic-delete-field: DELETE_FLAG\n      logic-delete-value: DELETED\n      logic-not-delete-value: NOT_DELETE\n  mapper-locations: classpath*:vip/xiaonuo/**/mapping/*.xml,com/bstek/**/mapping/*.xml\n  type-handlers-package: vip.xiaonuo.common.handler\n\n#########################################\n# easy-trans configuration\n#########################################\neasy-trans:\n  is-enable-redis: true\n  is-enable-global: true\n  is-enable-tile: true\n  is-enable-cloud: false\n\n#########################################\n# sa-token configuration\n#########################################\nsa-token:\n  token-name: token\n  timeout: 2592000\n  active-timeout: -1\n  is-concurrent: true\n  is-share: false\n  max-login-count: -1\n  token-style: random-32\n  is-log: false\n  is-print: false\n\n# sa-token alone-redis configuration\n  alone-redis:\n    database: 2\n    host: ${spring.data.redis.host}\n    port: ${spring.data.redis.port}\n    password: ${spring.data.redis.password}\n    timeout: ${spring.data.redis.timeout}\n    lettuce:\n      pool:\n        max-active: ${spring.data.redis.lettuce.pool.max-active}\n        max-wait: ${spring.data.redis.lettuce.pool.max-wait}\n        max-idle: ${spring.data.redis.lettuce.pool.max-idle}\n        min-idle: ${spring.data.redis.lettuce.pool.min-idle}\n\n  # sso configuration      \n  sso-client:\n    client: \n    auth-url: \n    signout-url: \n    push-url: \n    secret-key: \n    \n#########################################\n# knife4j configuration\n#########################################\nknife4j:\n  enable: true\n  production: false\n  basic:\n    enable: false\n    username: admin\n    password: 123456\n  setting:\n    enableOpenApi: false\n    enableSwaggerModels: false\n    enableFooter: false\n    enableFooterCustom: true\n    footerCustomContent: Apache License 2.0 | Copyright 2022-[SNOWY](https://www.xiaonuo.vip)\n\n# knife4j doc groups\nspringdoc:\n  default-flat-param-object: true\n  group-configs:\n    - group: SNOWY-PLUGIN-AUTH\n      display-name: SNOWY-PLUGIN-AUTH\n      packages-to-scan: vip.xiaonuo.auth\n    - group: SNOWY-PLUGIN-DEV\n      display-name: SNOWY-PLUGIN-DEV\n      packages-to-scan: vip.xiaonuo.dev\n    - group: SNOWY-PLUGIN-GEN\n      display-name: SNOWY-PLUGIN-GEN\n      packages-to-scan: vip.xiaonuo.gen\n    - group: SNOWY-PLUGIN-MOBILE\n      display-name: SNOWY-PLUGIN-MOBILE\n      packages-to-scan: vip.xiaonuo.mobile\n    - group: SNOWY-PLUGIN-SYS\n      display-name: SNOWY-PLUGIN-SYS\n      packages-to-scan: vip.xiaonuo.sys\n\n\n#########################################\n# snowy configuration\n#########################################\nsnowy:\n  config:\n    # common configuration\n    common:\n      backend-url: http://localhost:9101\n      file-url: http://localhost:9003/api/webapp\n\n# plugin dev-sms configuration\nsms-oa:\n  config-type: yaml\n  core-pool-size: 20\n  queue-capacity: 20\n  max-pool-size: 20', 'a4d5cb4fb646995632295b4adb72b5b5', '2024-04-24 14:38:06', '2025-09-24 17:26:44', NULL, '192.168.0.105', '', 'snowy-cloud-test', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (12, 'snowy-biz-app-test.yaml', 'test', '#########################################\n# server configuration\n#########################################\nserver:\n  port: 9102\n\n#########################################\n# spring profiles configuration\n#########################################\nspring:\n\n  #########################################\n  # multipart configuration\n  #########################################\n  servlet:\n    multipart:\n      max-request-size: 100MB\n      max-file-size: 100MB\n\n  #########################################\n  # mvc configuration\n  #########################################\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n\n  #########################################\n  # main configuration\n  #########################################\n  main:\n    allow-circular-references: true\n\n  #########################################\n  # boot configuration\n  #########################################\n  boot:\n    admin:\n      client:\n        url: http://localhost:9001\n        instance:\n          # 默认使用的是主机名注册，改为使用ip注册\n          prefer-ip: true\n\n  #########################################\n  # cloud configuration\n  #########################################\n  cloud:\n    loadbalancer:\n      ribbon:\n        enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    nacos:\n      discovery:\n        server-addr: ${spring.cloud.nacos.config.server-addr}\n        namespace: ${spring.cloud.nacos.config.namespace}\n        group: ${spring.cloud.nacos.config.group}\n        username: ${spring.cloud.nacos.config.username}\n        password: ${spring.cloud.nacos.config.password}\n\n  #########################################\n  # datasource configuration\n  #########################################\n\n  # mysql\n  datasource:\n    dynamic:\n      datasource:\n        master:\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: jdbc:mysql://localhost:3306/snowy-cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&useInformationSchema=true&rewriteBatchedStatements=true\n          username: root\n          password: 123456\n      strict: true\n\n  # oracle\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: oracle.jdbc.driver.OracleDriver\n#          url: jdbc:oracle:thin:@//127.0.0.1:1521/XE?remarksReporting=true\n#          username: SNOWY\n#          password: 12345678\n#      strict: true\n\n  # mssql\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver\n#          url: jdbc:sqlserver://localhost:1433;DatabaseName=SNOWY\n#          username: sa\n#          password: 12345678\n#      strict: true\n\n  # dm database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: dm.jdbc.driver.DmDriver\n#          url: jdbc:dm://localhost:5236/SYSDBA\n#          username: SYSDBA\n#          password: SYSDBA\n#      strict: true\n\n  # kingbase database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.kingbase8.Driver\n#          url: jdbc:kingbase8://localhost:54321/snowy\n#          username: SYSTEM\n#          password: 123456\n#      strict: true\n\n      # druid global configuration\n      public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAMWiTVtdXFVrgFHDDKELZM0SywkWY3KjugN90eY5Sogon1j8Y0ClPF7nx3FuE7pAeBKiv7ChIS0vvx/59WUpKmUCAwEAAQ==\n      druid:\n        initial-size: 5\n        max-active: 20\n        min-idle: 5\n        max-wait: 60000\n        pool-prepared-statements: true\n        max-pool-prepared-statement-per-connection-size: 20\n        validation-query-timeout: 2000\n        test-on-borrow: false\n        test-on-return: false\n        test-while-idle: true\n        time-between-eviction-runs-millis: 6000\n        min-evictable-idle-time-millis: 300000\n        filters: stat\n        break-after-acquire-failure: false\n\n    # druid monitor configuration\n    druid:\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n\n  #########################################\n  # jackson configuration\n  #########################################\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n    locale: zh_CN\n\n  #########################################\n  # redis configuration\n  #########################################\n  data:\n    redis:\n      database: 1\n      host: 127.0.0.1\n      port: 6379\n      password:\n      timeout: 10s\n      lettuce:\n        pool:\n          max-active: 200\n          max-wait: -1ms\n          max-idle: 10\n          min-idle: 0\n\n#########################################\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\n#########################################\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      show-details: \"ALWAYS\"\n\n#########################################\n# mybatis-plus configuration\n#########################################\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    banner: false\n    enable-sql-runner: true\n    db-config:\n      id-type: ASSIGN_ID\n      logic-delete-field: DELETE_FLAG\n      logic-delete-value: DELETED\n      logic-not-delete-value: NOT_DELETE\n  mapper-locations: classpath*:vip/xiaonuo/**/mapping/*.xml,com/bstek/**/mapping/*.xml\n  type-handlers-package: vip.xiaonuo.common.handler\n\n#########################################\n# easy-trans configuration\n#########################################\neasy-trans:\n  is-enable-redis: true\n  is-enable-global: true\n  is-enable-tile: true\n  is-enable-cloud: true\n\n#########################################\n# sa-token configuration\n#########################################\nsa-token:\n  token-name: token\n  timeout: 2592000\n  active-timeout: -1\n  is-concurrent: true\n  is-share: false\n  max-login-count: -1\n  token-style: random-32\n  is-log: false\n  is-print: false\n\n# sa-token alone-redis configuration\n  alone-redis:\n    database: 2\n    host: ${spring.data.redis.host}\n    port: ${spring.data.redis.port}\n    password: ${spring.data.redis.password}\n    timeout: ${spring.data.redis.timeout}\n    lettuce:\n      pool:\n        max-active: ${spring.data.redis.lettuce.pool.max-active}\n        max-wait: ${spring.data.redis.lettuce.pool.max-wait}\n        max-idle: ${spring.data.redis.lettuce.pool.max-idle}\n        min-idle: ${spring.data.redis.lettuce.pool.min-idle}\n\n  # sso configuration      \n  sso-client:\n    client: \n    auth-url: \n    signout-url: \n    push-url: \n    secret-key: \n\n#########################################\n# knife4j configuration\n#########################################\nknife4j:\n  enable: true\n  production: false\n  basic:\n    enable: false\n    username: admin\n    password: 123456\n  setting:\n    enableOpenApi: false\n    enableSwaggerModels: false\n    enableFooter: false\n    enableFooterCustom: true\n    footerCustomContent: Apache License 2.0 | Copyright 2022-[SNOWY](https://www.xiaonuo.vip)\n\n# knife4j doc groups\nspringdoc:\n  default-flat-param-object: true\n  group-configs:\n    - group: SNOWY-PLUGIN-BIZ\n      display-name: SNOWY-PLUGIN-BIZ\n      packages-to-scan: vip.xiaonuo.biz\n    - group: SNOWY-PLUGIN-CLIENT\n      display-name: SNOWY-PLUGIN-CLIENT\n      packages-to-scan: vip.xiaonuo.client\n\n#########################################\n# snowy configuration\n#########################################\nsnowy:\n  config:\n# common configuration\n    common:\n      front-url: http://localhost:9000\n      backend-url: http://localhost:9102', 'b38c3ea8be0afef58640bc58d567a035', '2024-04-24 14:38:29', '2025-09-24 17:27:02', NULL, '192.168.0.105', '', 'snowy-cloud-test', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (13, 'snowy-actuator-app-prod.yaml', 'prod', '# 服务配置\r\nserver:\r\n  port: 9001\r\n\r\n# spring相关配置\r\nspring:\r\n  boot:\r\n    admin:\r\n      client:\r\n        url: http://localhost:9001\r\n        instance:\r\n          # 默认使用的是主机名注册，改为使用ip注册\r\n          prefer-ip: true\r\n  cloud:\r\n    # nacos配置\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${spring.cloud.nacos.config.server-addr}\r\n        namespace: ${spring.cloud.nacos.config.namespace}\r\n        group: ${spring.cloud.nacos.config.group}\r\n        username: ${spring.cloud.nacos.config.username}\r\n        password: ${spring.cloud.nacos.config.password}\r\n\r\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n    health:\r\n      show-details: \"ALWAYS\"', '62b64acc7e8916c19b2432b6ef0ad089', '2024-04-24 14:49:08', '2024-04-24 14:49:08', 'nacos', '192.168.0.105', '', 'snowy-cloud-prod', NULL, NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (14, 'snowy-sentinel-app-prod.yaml', 'prod', '# 服务配置\r\nserver:\r\n  port: 9002\r\n  servlet:\r\n    #spring settings\r\n    encoding:\r\n      force: true\r\n      charset: UTF-8\r\n      enabled: true\r\n    #cookie name setting\r\n    session:\r\n      cookie:\r\n        name:\r\n          sentinel_dashboard_cookie: sentinel_dashboard_cookie\r\n\r\n# spring相关配置\r\nspring:\r\n  mvc:\r\n    pathmatch:\r\n      matching-strategy: ant_path_matcher\r\n  boot:\r\n    admin:\r\n      client:\r\n        url: http://localhost:9001\r\n        instance:\r\n          # 默认使用的是主机名注册，改为使用ip注册\r\n          prefer-ip: true\r\n  cloud:\r\n    # nacos配置\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${spring.cloud.nacos.config.server-addr}\r\n        namespace: ${spring.cloud.nacos.config.namespace}\r\n        group: ${spring.cloud.nacos.config.group}\r\n        username: ${spring.cloud.nacos.config.username}\r\n        password: ${spring.cloud.nacos.config.password}\r\n\r\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n    health:\r\n      show-details: \"ALWAYS\"\r\n\r\n# logging settings\r\nlogging:\r\n  level:\r\n    org:\r\n      springframework:\r\n        web: INFO\r\n  file:\r\n    name: ${user.home}/logs/csp/sentinel-dashboard.log\r\n  pattern:\r\n    file: \'%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n\'\r\n    console: \'%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n\'\r\n\r\n# auth settings\r\nauth:\r\n  filter:\r\n    exclude-urls: /,/auth/login,/auth/logout,/registry/machine,/version,/actuator/**,/details\r\n    exclude-url-suffixes: htm,html,js,css,map,ico,ttf,woff,png\r\n  # If auth.enabled=false, Sentinel console disable login\r\n  username: sentinel\r\n  password: sentinel\r\n\r\n# Inject the dashboard version. It\'s required to enable\r\n# filtering in pom.xml for this resource file.\r\nsentinel:\r\n  dashboard:\r\n    version: 1.8.7', 'b87739eb375a52be36b6b6f125d231c2', '2024-04-24 14:49:30', '2024-04-24 14:49:30', 'nacos', '192.168.0.105', '', 'snowy-cloud-prod', NULL, NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (15, 'snowy-gateway-app-prod.yaml', 'prod', '# 服务配置\nserver:\n  port: 9003\n\n# spring相关配置\nspring:\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:3306/snowy-cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&useInformationSchema=true&rewriteBatchedStatements=true\n    username: root\n    password: 123456\n\n# Oracle数据库\n#spring:\n#  datasource:\n#    driver-class-name: oracle.jdbc.OracleDriver\n#    url: jdbc:oracle:thin:@localhost:1521:xe\n#    username: SNOWY-CLOUD-ORACLE\n#    password: 123456\n\n# SQLServer配置\n#spring:\n#  datasource:\n#    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver\n#    url: jdbc:sqlserver://localhost:1433;DatabaseName=snowy-cloud-mssql\n#    username: sa\n#    password: 123456\n\n# PostgreSQL配置\n#spring:\n#  datasource:\n#    driverClassName: org.postgresql.Driver\n#    url: jdbc:postgresql://127.0.0.1:5432/snowy-cloud-postgresql\n#    username: postgres\n#    password: 123456\n\n# 达梦数据库配置\n#spring:\n#  datasource:\n#    driver-class-name: dm.jdbc.driver.DmDriver\n#    url: jdbc:dm://localhost:5236/SYSDBA\n#    username: SYSDBA\n#    password: 123456789\n\n# 人大金仓数据库\n#spring:\n#  datasource:\n#    driver-class-name: com.kingbase8.Driver\n#    url: jdbc:kingbase8://localhost:54321/snowy-cloud-kingbase\n#    username: system\n#    password: 123456\n# #人大金仓数据库兼容问题，不需要加在sql语句中加public的解决方法：\n# #在根目录data下的kingbase.conf文档里面找到search_path = \'\"$user\",PUBLIC,sys_catalog\'进行替换放开\n# #重启数据库即可完全兼容，注意 sql中不能出现mysql中的关键字的单引号\n\n  # redis相关配置\n  data:\n    redis:\n      database: 1\n      host: 127.0.0.1\n      port: 6379\n      password: \n      timeout: 10s\n      lettuce:\n        pool:\n          max-active: 200\n          max-wait: -1ms\n          max-idle: 10\n          min-idle: 0\n\n  boot:\n    admin:\n      client:\n        url: http://localhost:9001\n        instance:\n          # 默认使用的是主机名注册，改为使用ip注册\n          prefer-ip: true\n  cloud:\n    loadbalancer:\n      ribbon:\n        enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    # nacos配置\n    nacos:\n      discovery:\n        server-addr: ${spring.cloud.nacos.config.server-addr}\n        namespace: ${spring.cloud.nacos.config.namespace}\n        group: ${spring.cloud.nacos.config.group}\n        username: ${spring.cloud.nacos.config.username}\n        password: ${spring.cloud.nacos.config.password}\n    sentinel:\n      transport:\n        dashboard: localhost:9002\n        port: 8719\n      scg:\n        fallback:\n          mode: response\n          response-status: 455\n          response-body: error!\n    # gateway配置\n    gateway:\n      default-filters:\n        - DedupeResponseHeader=Access-Control-Allow-Origin\n      globalcors:\n        add-to-simple-url-handler-mapping: true\n        corsConfigurations:\n          \'[/**]\':\n            allowed-origins-patterns: \"*\"\n            allowed-methods: \"*\"\n            allowed-headers: \"*\"\n            allow-credentials: true\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        - id: snowy-web-app\n          uri: lb://snowy-web-app\n          predicates:\n            - Path=/api/webapp/**\n          filters:\n            - SwaggerHeaderFilter\n            - StripPrefix=2 #去掉Path中前两个节点\n            - name: Retry\n              args:\n                retries: 1 #重试次数\n        - id: snowy-web-app\n          uri: lb://snowy-web-app\n          predicates:\n            - Path=/druid/**\n          filters:\n            - SwaggerHeaderFilter\n            - name: Retry\n              args:\n                retries: 1 #重试次数\n        - id: snowy-biz-app\n          uri: lb://snowy-biz-app\n          predicates:\n            - Path=/api/bizapp/**\n          filters:\n            - SwaggerHeaderFilter\n            - StripPrefix=2 #去掉Path中前两个节点\n            - name: Retry\n              args:\n                retries: 1 #重试次数\n\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      show-details: \"ALWAYS\"\n\n#########################################\n# sa-token configuration\n#########################################\nsa-token:\n  token-name: token\n  timeout: 2592000\n  active-timeout: -1\n  is-concurrent: true\n  is-share: false\n  max-login-count: -1\n  token-style: random-32\n  is-log: false\n  is-print: false\n\n  # sa-token alone-redis configuration\n  alone-redis:\n    database: 2\n    host: ${spring.data.redis.host}\n    port: ${spring.data.redis.port}\n    password: ${spring.data.redis.password}\n    timeout: ${spring.data.redis.timeout}\n    lettuce:\n      pool:\n        max-active: ${spring.data.redis.lettuce.pool.max-active}\n        max-wait: ${spring.data.redis.lettuce.pool.max-wait}\n        max-idle: ${spring.data.redis.lettuce.pool.max-idle}\n        min-idle: ${spring.data.redis.lettuce.pool.min-idle}\n\n  # sso configuration      \n  sso-client:\n    client: \n    auth-url: \n    signout-url: \n    push-url: \n    secret-key: \n    \n# knife4j 文档聚合\nknife4j:\n  enable: true\n  production: false\n  basic:\n    enable: true\n    username: admin\n    password: 123456\n  setting:\n    enableOpenApi: false\n    enableSwaggerModels: false\n    enableFooter: false\n    enableFooterCustom: true\n    footerCustomContent: Apache License 2.0 | Copyright 2022-[SNOWY](https://www.xiaonuo.vip)\n  # gateway聚合swagger文档\n  gateway:\n    enabled: true\n    # 排序规则(tag/operation排序自4.2.0版本新增)\n    # 取值：alpha-默认排序规则，官方swagger-ui默认实现,order-Knife4j提供的增强排序规则，开发者可扩展x-order，根据数值来自定义排序\n    tags-sorter: order\n    operations-sorter: order\n     # 指定手动配置的模式(默认为该模式)\n    strategy: manual\n    routes:\n      - name: SNOWY-PLUGIN-AUTH\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-AUTH\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-BIZ\n        url: /api/bizapp/v3/api-docs/SNOWY-PLUGIN-BIZ\n        service-name: snowy-biz-app\n        context-path: /\n      - name: SNOWY-PLUGIN-CLIENT\n        url: /api/bizapp/v3/api-docs/SNOWY-PLUGIN-CLIENT\n        service-name: snowy-biz-app\n        context-path: /\n      - name: SNOWY-PLUGIN-DEV\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-DEV\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-GEN\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-GEN\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-MOBILE\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-MOBILE\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-SYS\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-SYS\n        service-name: snowy-web-app\n        context-path: /', '80ca6295f93ce62b25c6b160b90ece0d', '2024-04-24 14:49:52', '2025-09-24 17:25:45', NULL, '192.168.0.105', '', 'snowy-cloud-prod', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (16, 'snowy-xxl-job-app-prod.yaml', 'prod', '# 服务配置\r\nserver:\r\n  port: 9004\r\n  servlet:\r\n    context-path: /xxl-job-admin\r\n\r\n# spring相关配置\r\nspring:\r\n  boot:\r\n    admin:\r\n      client:\r\n        url: http://localhost:9001\r\n        instance:\r\n          # 默认使用的是主机名注册，改为使用ip注册\r\n          prefer-ip: true\r\n  cloud:\r\n    loadbalancer:\r\n      ribbon:\r\n        enabled: false\r\n      cache:\r\n        enabled: true\r\n        caffeine:\r\n          spec: initialCapacity=500,expireAfterWrite=5s\r\n    # nacos配置\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${spring.cloud.nacos.config.server-addr}\r\n        namespace: ${spring.cloud.nacos.config.namespace}\r\n        group: ${spring.cloud.nacos.config.group}\r\n        username: ${spring.cloud.nacos.config.username}\r\n        password: ${spring.cloud.nacos.config.password}\r\n        metadata:\r\n          management.context-path: ${server.servlet.context-path}/actuator\r\n      config:\r\n        server-addr: localhost:8848 #Nacos配置中心地址\r\n        file-extension: yml #指定yml格式的配置\r\n        username: nacos\r\n        password: nacos\r\n  datasource:\r\n    ### xxl-job, datasource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/snowy-cloud-job?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&nullCatalogMeansCurrent=true\r\n    username: root\r\n    password: 123456\r\n    ### datasource-pool\r\n    type: com.zaxxer.hikari.HikariDataSource\r\n    hikari:\r\n      minimum-idle: 10\r\n      maximum-pool-size: 30\r\n      auto-commit: true\r\n      idle-timeout: 30000\r\n      pool-name: HikariCP\r\n      max-lifetime: 900000\r\n      connection-timeout: 10000\r\n      connection-test-query: SELECT 1\r\n      validation-timeout: 1000\r\n  ### resources\r\n  resources:\r\n    static-locations: classpath:/static/\r\n  mvc:\r\n    servlet:\r\n      load-on-startup: 0\r\n    static-path-pattern: /static/**\r\n  ### freemarker\r\n  freemarker:\r\n    templateLoaderPath: classpath:/templates/\r\n    suffix: .ftl\r\n    charset: UTF-8\r\n    request-context-attribute: request\r\n    settings:\r\n      number_format: 0.##########\r\n  ### xxl-job, email\r\n  mail:\r\n    host: smtp.qq.com\r\n    port: 25\r\n    username: xxx@qq.com\r\n    from: xxx@qq.com\r\n    password: xxx\r\n    properties:\r\n      mail:\r\n        smtp:\r\n          auth: true\r\n          starttls:\r\n            enable: true\r\n            required: true\r\n          socketFactory:\r\n            class: javax.net.ssl.SSLSocketFactory\r\n\r\n### mybatis\r\nmybatis:\r\n  mapper-locations: classpath:/mybatis-mapper/*Mapper.xml\r\n# type-aliases-package: com.xxl.job.admin.core.model\r\n\r\n### xxl-job\r\n### xxl-job, access token\r\nxxl:\r\n  job:\r\n    accessToken: 123456\r\n    ### xxl-job, i18n (default is zh_CN, and you can choose \"zh_CN\", \"zh_TC\" and \"en\")\r\n    i18n: zh_CN\r\n    ## xxl-job, triggerpool max size\r\n    triggerpool:\r\n      fast:\r\n        max: 200\r\n      slow:\r\n        max: 100\r\n    ### xxl-job, log retention days\r\n    logretentiondays: 30\r\n\r\n### actuator\r\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n    health:\r\n      show-details: \"ALWAYS\"\r\n  health:\r\n    mail:\r\n      enabled: false', '544e57a2a3ce12e2c5f26e865a297f16', '2024-04-24 14:50:11', '2024-04-24 14:50:11', 'nacos', '192.168.0.105', '', 'snowy-cloud-prod', NULL, NULL, NULL, 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (17, 'snowy-web-app-prod.yaml', 'prod', '#########################################\n# server configuration\n#########################################\nserver:\n  port: 9101\n\n#########################################\n# spring profiles configuration\n#########################################\nspring:\n\n  #########################################\n  # multipart configuration\n  #########################################\n  servlet:\n    multipart:\n      max-request-size: 100MB\n      max-file-size: 100MB\n\n  #########################################\n  # mvc configuration\n  #########################################\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n\n  #########################################\n  # main configuration\n  #########################################\n  main:\n    allow-circular-references: true\n\n  #########################################\n  # boot configuration\n  #########################################\n  boot:\n    admin:\n      client:\n        url: http://localhost:9001\n        instance:\n          # 默认使用的是主机名注册，改为使用ip注册\n          prefer-ip: true\n\n  #########################################\n  # cloud configuration\n  #########################################\n  cloud:\n    loadbalancer:\n      ribbon:\n        enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    nacos:\n      discovery:\n        server-addr: ${spring.cloud.nacos.config.server-addr}\n        namespace: ${spring.cloud.nacos.config.namespace}\n        group: ${spring.cloud.nacos.config.group}\n        username: ${spring.cloud.nacos.config.username}\n        password: ${spring.cloud.nacos.config.password}\n\n  #########################################\n  # datasource configuration\n  #########################################\n\n  # mysql\n  datasource:\n    dynamic:\n      datasource:\n        master:\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: jdbc:mysql://localhost:3306/snowy-cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&useInformationSchema=true&rewriteBatchedStatements=true\n          username: root\n          password: 123456\n      strict: true\n\n  # oracle\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: oracle.jdbc.driver.OracleDriver\n#          url: jdbc:oracle:thin:@//127.0.0.1:1521/XE?remarksReporting=true\n#          username: SNOWY\n#          password: 12345678\n#      strict: true\n\n  # mssql\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver\n#          url: jdbc:sqlserver://localhost:1433;DatabaseName=SNOWY\n#          username: sa\n#          password: 12345678\n#      strict: true\n\n  # dm database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: dm.jdbc.driver.DmDriver\n#          url: jdbc:dm://localhost:5236/SYSDBA\n#          username: SYSDBA\n#          password: SYSDBA\n#      strict: true\n\n  # kingbase database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.kingbase8.Driver\n#          url: jdbc:kingbase8://localhost:54321/snowy\n#          username: SYSTEM\n#          password: 123456\n#      strict: true\n\n      # druid global configuration\n      public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAMWiTVtdXFVrgFHDDKELZM0SywkWY3KjugN90eY5Sogon1j8Y0ClPF7nx3FuE7pAeBKiv7ChIS0vvx/59WUpKmUCAwEAAQ==\n      druid:\n        initial-size: 5\n        max-active: 20\n        min-idle: 5\n        max-wait: 60000\n        pool-prepared-statements: true\n        max-pool-prepared-statement-per-connection-size: 20\n        validation-query-timeout: 2000\n        test-on-borrow: false\n        test-on-return: false\n        test-while-idle: true\n        time-between-eviction-runs-millis: 6000\n        min-evictable-idle-time-millis: 300000\n        filters: stat\n        break-after-acquire-failure: false\n\n    # druid monitor configuration\n    druid:\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        allow: \"\"\n\n  #########################################\n  # jackson configuration\n  #########################################\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n    locale: zh_CN\n\n  #########################################\n  # redis configuration\n  #########################################\n  data:\n    redis:\n      database: 1\n      host: 127.0.0.1\n      port: 6379\n      password:\n      timeout: 10s\n      lettuce:\n        pool:\n          max-active: 200\n          max-wait: -1ms\n          max-idle: 10\n          min-idle: 0\n\n#########################################\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\n#########################################\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      show-details: \"ALWAYS\"\n\n#########################################\n# mybatis-plus configuration\n#########################################\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    banner: false\n    enable-sql-runner: true\n    db-config:\n      id-type: ASSIGN_ID\n      logic-delete-field: DELETE_FLAG\n      logic-delete-value: DELETED\n      logic-not-delete-value: NOT_DELETE\n  mapper-locations: classpath*:vip/xiaonuo/**/mapping/*.xml,com/bstek/**/mapping/*.xml\n  type-handlers-package: vip.xiaonuo.common.handler\n\n#########################################\n# easy-trans configuration\n#########################################\neasy-trans:\n  is-enable-redis: true\n  is-enable-global: true\n  is-enable-tile: true\n  is-enable-cloud: false\n\n#########################################\n# sa-token configuration\n#########################################\nsa-token:\n  token-name: token\n  timeout: 2592000\n  active-timeout: -1\n  is-concurrent: true\n  is-share: false\n  max-login-count: -1\n  token-style: random-32\n  is-log: false\n  is-print: false\n\n# sa-token alone-redis configuration\n  alone-redis:\n    database: 2\n    host: ${spring.data.redis.host}\n    port: ${spring.data.redis.port}\n    password: ${spring.data.redis.password}\n    timeout: ${spring.data.redis.timeout}\n    lettuce:\n      pool:\n        max-active: ${spring.data.redis.lettuce.pool.max-active}\n        max-wait: ${spring.data.redis.lettuce.pool.max-wait}\n        max-idle: ${spring.data.redis.lettuce.pool.max-idle}\n        min-idle: ${spring.data.redis.lettuce.pool.min-idle}\n\n  # sso configuration      \n  sso-client:\n    client: \n    auth-url: \n    signout-url: \n    push-url: \n    secret-key: \n    \n#########################################\n# knife4j configuration\n#########################################\nknife4j:\n  enable: true\n  production: false\n  basic:\n    enable: false\n    username: admin\n    password: 123456\n  setting:\n    enableOpenApi: false\n    enableSwaggerModels: false\n    enableFooter: false\n    enableFooterCustom: true\n    footerCustomContent: Apache License 2.0 | Copyright 2022-[SNOWY](https://www.xiaonuo.vip)\n\n# knife4j doc groups\nspringdoc:\n  default-flat-param-object: true\n  group-configs:\n    - group: SNOWY-PLUGIN-AUTH\n      display-name: SNOWY-PLUGIN-AUTH\n      packages-to-scan: vip.xiaonuo.auth\n    - group: SNOWY-PLUGIN-DEV\n      display-name: SNOWY-PLUGIN-DEV\n      packages-to-scan: vip.xiaonuo.dev\n    - group: SNOWY-PLUGIN-GEN\n      display-name: SNOWY-PLUGIN-GEN\n      packages-to-scan: vip.xiaonuo.gen\n    - group: SNOWY-PLUGIN-MOBILE\n      display-name: SNOWY-PLUGIN-MOBILE\n      packages-to-scan: vip.xiaonuo.mobile\n    - group: SNOWY-PLUGIN-SYS\n      display-name: SNOWY-PLUGIN-SYS\n      packages-to-scan: vip.xiaonuo.sys\n\n\n#########################################\n# snowy configuration\n#########################################\nsnowy:\n  config:\n    # common configuration\n    common:\n      backend-url: http://localhost:9101\n      file-url: http://localhost:9003/api/webapp\n\n# plugin dev-sms configuration\nsms-oa:\n  config-type: yaml\n  core-pool-size: 20\n  queue-capacity: 20\n  max-pool-size: 20', 'a4d5cb4fb646995632295b4adb72b5b5', '2024-04-24 14:50:30', '2025-09-24 17:26:01', NULL, '192.168.0.105', '', 'snowy-cloud-prod', '', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (45, 'snowy-biz-app-prod.yaml', 'prod', '#########################################\n# server configuration\n#########################################\nserver:\n  port: 9102\n\n#########################################\n# spring profiles configuration\n#########################################\nspring:\n\n  #########################################\n  # multipart configuration\n  #########################################\n  servlet:\n    multipart:\n      max-request-size: 100MB\n      max-file-size: 100MB\n\n  #########################################\n  # mvc configuration\n  #########################################\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n\n  #########################################\n  # main configuration\n  #########################################\n  main:\n    allow-circular-references: true\n\n  #########################################\n  # boot configuration\n  #########################################\n  boot:\n    admin:\n      client:\n        url: http://localhost:9001\n        instance:\n          # 默认使用的是主机名注册，改为使用ip注册\n          prefer-ip: true\n\n  #########################################\n  # cloud configuration\n  #########################################\n  cloud:\n    loadbalancer:\n      ribbon:\n        enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    nacos:\n      discovery:\n        server-addr: ${spring.cloud.nacos.config.server-addr}\n        namespace: ${spring.cloud.nacos.config.namespace}\n        group: ${spring.cloud.nacos.config.group}\n        username: ${spring.cloud.nacos.config.username}\n        password: ${spring.cloud.nacos.config.password}\n\n  #########################################\n  # datasource configuration\n  #########################################\n\n  # mysql\n  datasource:\n    dynamic:\n      datasource:\n        master:\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: jdbc:mysql://localhost:3306/snowy-cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&useInformationSchema=true&rewriteBatchedStatements=true\n          username: root\n          password: 123456\n      strict: true\n\n  # oracle\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: oracle.jdbc.driver.OracleDriver\n#          url: jdbc:oracle:thin:@//127.0.0.1:1521/XE?remarksReporting=true\n#          username: SNOWY\n#          password: 12345678\n#      strict: true\n\n  # mssql\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver\n#          url: jdbc:sqlserver://localhost:1433;DatabaseName=SNOWY\n#          username: sa\n#          password: 12345678\n#      strict: true\n\n  # dm database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: dm.jdbc.driver.DmDriver\n#          url: jdbc:dm://localhost:5236/SYSDBA\n#          username: SYSDBA\n#          password: SYSDBA\n#      strict: true\n\n  # kingbase database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.kingbase8.Driver\n#          url: jdbc:kingbase8://localhost:54321/snowy\n#          username: SYSTEM\n#          password: 123456\n#      strict: true\n\n      # druid global configuration\n      public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAMWiTVtdXFVrgFHDDKELZM0SywkWY3KjugN90eY5Sogon1j8Y0ClPF7nx3FuE7pAeBKiv7ChIS0vvx/59WUpKmUCAwEAAQ==\n      druid:\n        initial-size: 5\n        max-active: 20\n        min-idle: 5\n        max-wait: 60000\n        pool-prepared-statements: true\n        max-pool-prepared-statement-per-connection-size: 20\n        validation-query-timeout: 2000\n        test-on-borrow: false\n        test-on-return: false\n        test-while-idle: true\n        time-between-eviction-runs-millis: 6000\n        min-evictable-idle-time-millis: 300000\n        filters: stat\n        break-after-acquire-failure: false\n\n    # druid monitor configuration\n    druid:\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n\n  #########################################\n  # jackson configuration\n  #########################################\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n    locale: zh_CN\n\n  #########################################\n  # redis configuration\n  #########################################\n  data:\n    redis:\n      database: 1\n      host: 127.0.0.1\n      port: 6379\n      password:\n      timeout: 10s\n      lettuce:\n        pool:\n          max-active: 200\n          max-wait: -1ms\n          max-idle: 10\n          min-idle: 0\n\n#########################################\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\n#########################################\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      show-details: \"ALWAYS\"\n\n#########################################\n# mybatis-plus configuration\n#########################################\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    banner: false\n    enable-sql-runner: true\n    db-config:\n      id-type: ASSIGN_ID\n      logic-delete-field: DELETE_FLAG\n      logic-delete-value: DELETED\n      logic-not-delete-value: NOT_DELETE\n  mapper-locations: classpath*:vip/xiaonuo/**/mapping/*.xml,com/bstek/**/mapping/*.xml\n  type-handlers-package: vip.xiaonuo.common.handler\n\n#########################################\n# easy-trans configuration\n#########################################\neasy-trans:\n  is-enable-redis: true\n  is-enable-global: true\n  is-enable-tile: true\n  is-enable-cloud: true\n\n#########################################\n# sa-token configuration\n#########################################\nsa-token:\n  token-name: token\n  timeout: 2592000\n  active-timeout: -1\n  is-concurrent: true\n  is-share: false\n  max-login-count: -1\n  token-style: random-32\n  is-log: false\n  is-print: false\n\n# sa-token alone-redis configuration\n  alone-redis:\n    database: 2\n    host: ${spring.data.redis.host}\n    port: ${spring.data.redis.port}\n    password: ${spring.data.redis.password}\n    timeout: ${spring.data.redis.timeout}\n    lettuce:\n      pool:\n        max-active: ${spring.data.redis.lettuce.pool.max-active}\n        max-wait: ${spring.data.redis.lettuce.pool.max-wait}\n        max-idle: ${spring.data.redis.lettuce.pool.max-idle}\n        min-idle: ${spring.data.redis.lettuce.pool.min-idle}\n\n  # sso configuration      \n  sso-client:\n    client: \n    auth-url: \n    signout-url: \n    push-url: \n    secret-key: \n\n#########################################\n# knife4j configuration\n#########################################\nknife4j:\n  enable: true\n  production: false\n  basic:\n    enable: false\n    username: admin\n    password: 123456\n  setting:\n    enableOpenApi: false\n    enableSwaggerModels: false\n    enableFooter: false\n    enableFooterCustom: true\n    footerCustomContent: Apache License 2.0 | Copyright 2022-[SNOWY](https://www.xiaonuo.vip)\n\n# knife4j doc groups\nspringdoc:\n  default-flat-param-object: true\n  group-configs:\n    - group: SNOWY-PLUGIN-BIZ\n      display-name: SNOWY-PLUGIN-BIZ\n      packages-to-scan: vip.xiaonuo.biz\n    - group: SNOWY-PLUGIN-CLIENT\n      display-name: SNOWY-PLUGIN-CLIENT\n      packages-to-scan: vip.xiaonuo.client\n\n#########################################\n# snowy configuration\n#########################################\nsnowy:\n  config:\n# common configuration\n    common:\n      front-url: http://localhost:9000\n      backend-url: http://localhost:9102', 'b38c3ea8be0afef58640bc58d567a035', '2024-04-24 17:34:31', '2025-09-24 17:26:14', NULL, '192.168.0.105', '', 'snowy-cloud-prod', '', '', '', 'yaml', '', '');

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id` ASC, `group_id` ASC, `tenant_id` ASC, `datum_id` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = '增加租户字段' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_aggr
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT '秘钥',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfobeta_datagrouptenant`(`data_id` ASC, `group_id` ASC, `tenant_id` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = 'config_info_beta' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_beta
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfotag_datagrouptenanttag`(`data_id` ASC, `group_id` ASC, `tenant_id` ASC, `tag_id` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = 'config_info_tag' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_tag
-- ----------------------------

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation`  (
  `id` bigint NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE INDEX `uk_configtagrelation_configidtag`(`id` ASC, `tag_name` ASC, `tag_type` ASC) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = 'config_tag_relation' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_tags_relation
-- ----------------------------

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity`  (
  `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_group_id`(`group_id` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = '集群、各Group容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of group_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info`  (
  `id` bigint UNSIGNED NOT NULL,
  `nid` bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00',
  `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL,
  `src_ip` varchar(20) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT '秘钥',
  PRIMARY KEY (`nid`) USING BTREE,
  INDEX `idx_gmt_create`(`gmt_create` ASC) USING BTREE,
  INDEX `idx_gmt_modified`(`gmt_modified` ASC) USING BTREE,
  INDEX `idx_did`(`data_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 12 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = '多租户改造' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
INSERT INTO `his_config_info` VALUES (3, 1, 'snowy-gateway-app-dev.yaml', 'dev', '', '# 服务配置\nserver:\n  port: 9003\n\n# spring相关配置\nspring:\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:3306/snowy-cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&useInformationSchema=true&rewriteBatchedStatements=true\n    username: root\n    password: 123456\n\n# Oracle数据库\n#spring:\n#  datasource:\n#    driver-class-name: oracle.jdbc.OracleDriver\n#    url: jdbc:oracle:thin:@localhost:1521:xe\n#    username: SNOWY-CLOUD-ORACLE\n#    password: 123456\n\n# SQLServer配置\n#spring:\n#  datasource:\n#    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver\n#    url: jdbc:sqlserver://localhost:1433;DatabaseName=snowy-cloud-mssql\n#    username: sa\n#    password: 123456\n\n# PostgreSQL配置\n#spring:\n#  datasource:\n#    driverClassName: org.postgresql.Driver\n#    url: jdbc:postgresql://127.0.0.1:5432/snowy-cloud-postgresql\n#    username: postgres\n#    password: 123456\n\n# 达梦数据库配置\n#spring:\n#  datasource:\n#    driver-class-name: dm.jdbc.driver.DmDriver\n#    url: jdbc:dm://localhost:5236/SYSDBA\n#    username: SYSDBA\n#    password: 123456789\n\n# 人大金仓数据库\n#spring:\n#  datasource:\n#    driver-class-name: com.kingbase8.Driver\n#    url: jdbc:kingbase8://localhost:54321/snowy-cloud-kingbase\n#    username: system\n#    password: 123456\n# #人大金仓数据库兼容问题，不需要加在sql语句中加public的解决方法：\n# #在根目录data下的kingbase.conf文档里面找到search_path = \'\"$user\",PUBLIC,sys_catalog\'进行替换放开\n# #重启数据库即可完全兼容，注意 sql中不能出现mysql中的关键字的单引号\n\n  # redis相关配置\n  data:\n    redis:\n      database: 1\n      host: 127.0.0.1\n      port: 6379\n      password: \n      timeout: 10s\n      lettuce:\n        pool:\n          max-active: 200\n          max-wait: -1ms\n          max-idle: 10\n          min-idle: 0\n\n  boot:\n    admin:\n      client:\n        url: http://localhost:9001\n        instance:\n          # 默认使用的是主机名注册，改为使用ip注册\n          prefer-ip: true\n  cloud:\n    loadbalancer:\n      ribbon:\n        enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    # nacos配置\n    nacos:\n      discovery:\n        server-addr: ${spring.cloud.nacos.config.server-addr}\n        namespace: ${spring.cloud.nacos.config.namespace}\n        group: ${spring.cloud.nacos.config.group}\n        username: ${spring.cloud.nacos.config.username}\n        password: ${spring.cloud.nacos.config.password}\n    sentinel:\n      transport:\n        dashboard: localhost:9002\n        port: 8719\n      scg:\n        fallback:\n          mode: response\n          response-status: 455\n          response-body: error!\n    # gateway配置\n    gateway:\n      default-filters:\n        - DedupeResponseHeader=Access-Control-Allow-Origin\n      globalcors:\n        add-to-simple-url-handler-mapping: true\n        corsConfigurations:\n          \'[/**]\':\n            allowed-origins-patterns: \"*\"\n            allowed-methods: \"*\"\n            allowed-headers: \"*\"\n            allow-credentials: true\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        - id: snowy-web-app\n          uri: lb://snowy-web-app\n          predicates:\n            - Path=/api/webapp/**\n          filters:\n            - SwaggerHeaderFilter\n            - StripPrefix=2 #去掉Path中前两个节点\n            - name: Retry\n              args:\n                retries: 1 #重试次数\n        - id: snowy-web-app\n          uri: lb://snowy-web-app\n          predicates:\n            - Path=/druid/**\n          filters:\n            - SwaggerHeaderFilter\n            - name: Retry\n              args:\n                retries: 1 #重试次数\n        - id: snowy-biz-app\n          uri: lb://snowy-biz-app\n          predicates:\n            - Path=/api/bizapp/**\n          filters:\n            - SwaggerHeaderFilter\n            - StripPrefix=2 #去掉Path中前两个节点\n            - name: Retry\n              args:\n                retries: 1 #重试次数\n\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      show-details: \"ALWAYS\"\n\n#########################################\n# sa-token configuration\n#########################################\nsa-token:\n  token-name: token\n  timeout: 2592000\n  active-timeout: -1\n  is-concurrent: true\n  is-share: false\n  max-login-count: -1\n  token-style: random-32\n  is-log: false\n  is-print: false\n\n  # sa-token alone-redis configuration\n  alone-redis:\n    database: 2\n    host: ${spring.data.redis.host}\n    port: ${spring.data.redis.port}\n    password: ${spring.data.redis.password}\n    timeout: ${spring.data.redis.timeout}\n    lettuce:\n      pool:\n        max-active: ${spring.data.redis.lettuce.pool.max-active}\n        max-wait: ${spring.data.redis.lettuce.pool.max-wait}\n        max-idle: ${spring.data.redis.lettuce.pool.max-idle}\n        min-idle: ${spring.data.redis.lettuce.pool.min-idle}\n\n  # sso configuration      \n  sso-client:\n    client: \n    auth-url: \n    signout-url: \n    push-url: \n    secret-key: \n    \n# knife4j 文档聚合\nknife4j:\n  enable: true\n  production: false\n  basic:\n    enable: true\n    username: admin\n    password: 123456\n  setting:\n    enableOpenApi: false\n    enableSwaggerModels: false\n    enableFooter: false\n    enableFooterCustom: true\n    footerCustomContent: Apache License 2.0 | Copyright 2022-[SNOWY](https://www.xiaonuo.vip)\n  # gateway聚合swagger文档\n  gateway:\n    enabled: true\n    # 排序规则(tag/operation排序自4.2.0版本新增)\n    # 取值：alpha-默认排序规则，官方swagger-ui默认实现,order-Knife4j提供的增强排序规则，开发者可扩展x-order，根据数值来自定义排序\n    tags-sorter: order\n    operations-sorter: order\n     # 指定手动配置的模式(默认为该模式)\n    strategy: manual\n    routes:\n      - name: SNOWY-PLUGIN-AUTH\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-AUTH\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-BIZ\n        url: /api/bizapp/v3/api-docs/SNOWY-PLUGIN-BIZ\n        service-name: snowy-biz-app\n        context-path: /\n      - name: SNOWY-PLUGIN-CLIENT\n        url: /api/bizapp/v3/api-docs/SNOWY-PLUGIN-CLIENT\n        service-name: snowy-biz-app\n        context-path: /\n      - name: SNOWY-PLUGIN-DEV\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-DEV\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-GEN\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-GEN\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-MOBILE\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-MOBILE\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-SYS\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-SYS\n        service-name: snowy-web-app\n        context-path: /', '80ca6295f93ce62b25c6b160b90ece0d', '2010-05-05 00:00:00', '2025-09-30 06:28:56', NULL, '0:0:0:0:0:0:0:1', 'U', 'snowy-cloud-dev', '');
INSERT INTO `his_config_info` VALUES (5, 2, 'snowy-web-app-dev.yaml', 'dev', '', '#########################################\n# server configuration\n#########################################\nserver:\n  port: 9101\n\n#########################################\n# spring profiles configuration\n#########################################\nspring:\n\n  #########################################\n  # multipart configuration\n  #########################################\n  servlet:\n    multipart:\n      max-request-size: 100MB\n      max-file-size: 100MB\n\n  #########################################\n  # mvc configuration\n  #########################################\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n\n  #########################################\n  # main configuration\n  #########################################\n  main:\n    allow-circular-references: true\n\n  #########################################\n  # boot configuration\n  #########################################\n  boot:\n    admin:\n      client:\n        url: http://localhost:9001\n        instance:\n          # 默认使用的是主机名注册，改为使用ip注册\n          prefer-ip: true\n\n  #########################################\n  # cloud configuration\n  #########################################\n  cloud:\n    loadbalancer:\n      ribbon:\n        enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    nacos:\n      discovery:\n        server-addr: ${spring.cloud.nacos.config.server-addr}\n        namespace: ${spring.cloud.nacos.config.namespace}\n        group: ${spring.cloud.nacos.config.group}\n        username: ${spring.cloud.nacos.config.username}\n        password: ${spring.cloud.nacos.config.password}\n\n  #########################################\n  # datasource configuration\n  #########################################\n\n  # mysql\n  datasource:\n    dynamic:\n      datasource:\n        master:\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: jdbc:mysql://localhost:3306/snowy-cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&useInformationSchema=true&rewriteBatchedStatements=true\n          username: root\n          password: 123456\n      strict: true\n\n  # oracle\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: oracle.jdbc.driver.OracleDriver\n#          url: jdbc:oracle:thin:@//127.0.0.1:1521/XE?remarksReporting=true\n#          username: SNOWY\n#          password: 12345678\n#      strict: true\n\n  # mssql\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver\n#          url: jdbc:sqlserver://localhost:1433;DatabaseName=SNOWY\n#          username: sa\n#          password: 12345678\n#      strict: true\n\n  # dm database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: dm.jdbc.driver.DmDriver\n#          url: jdbc:dm://localhost:5236/SYSDBA\n#          username: SYSDBA\n#          password: SYSDBA\n#      strict: true\n\n  # kingbase database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.kingbase8.Driver\n#          url: jdbc:kingbase8://localhost:54321/snowy\n#          username: SYSTEM\n#          password: 123456\n#      strict: true\n\n      # druid global configuration\n      public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAMWiTVtdXFVrgFHDDKELZM0SywkWY3KjugN90eY5Sogon1j8Y0ClPF7nx3FuE7pAeBKiv7ChIS0vvx/59WUpKmUCAwEAAQ==\n      druid:\n        initial-size: 5\n        max-active: 20\n        min-idle: 5\n        max-wait: 60000\n        pool-prepared-statements: true\n        max-pool-prepared-statement-per-connection-size: 20\n        validation-query-timeout: 2000\n        test-on-borrow: false\n        test-on-return: false\n        test-while-idle: true\n        time-between-eviction-runs-millis: 6000\n        min-evictable-idle-time-millis: 300000\n        filters: stat\n        break-after-acquire-failure: false\n\n    # druid monitor configuration\n    druid:\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        allow: \"\"\n\n  #########################################\n  # jackson configuration\n  #########################################\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n    locale: zh_CN\n\n  #########################################\n  # redis configuration\n  #########################################\n  data:\n    redis:\n      database: 1\n      host: 127.0.0.1\n      port: 6379\n      password:\n      timeout: 10s\n      lettuce:\n        pool:\n          max-active: 200\n          max-wait: -1ms\n          max-idle: 10\n          min-idle: 0\n\n#########################################\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\n#########################################\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      show-details: \"ALWAYS\"\n\n#########################################\n# mybatis-plus configuration\n#########################################\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    banner: false\n    enable-sql-runner: true\n    db-config:\n      id-type: ASSIGN_ID\n      logic-delete-field: DELETE_FLAG\n      logic-delete-value: DELETED\n      logic-not-delete-value: NOT_DELETE\n  mapper-locations: classpath*:vip/xiaonuo/**/mapping/*.xml,com/bstek/**/mapping/*.xml\n  type-handlers-package: vip.xiaonuo.common.handler\n\n#########################################\n# easy-trans configuration\n#########################################\neasy-trans:\n  is-enable-redis: true\n  is-enable-global: true\n  is-enable-tile: true\n  is-enable-cloud: false\n\n#########################################\n# sa-token configuration\n#########################################\nsa-token:\n  token-name: token\n  timeout: 2592000\n  active-timeout: -1\n  is-concurrent: true\n  is-share: false\n  max-login-count: -1\n  token-style: random-32\n  is-log: false\n  is-print: false\n\n# sa-token alone-redis configuration\n  alone-redis:\n    database: 2\n    host: ${spring.data.redis.host}\n    port: ${spring.data.redis.port}\n    password: ${spring.data.redis.password}\n    timeout: ${spring.data.redis.timeout}\n    lettuce:\n      pool:\n        max-active: ${spring.data.redis.lettuce.pool.max-active}\n        max-wait: ${spring.data.redis.lettuce.pool.max-wait}\n        max-idle: ${spring.data.redis.lettuce.pool.max-idle}\n        min-idle: ${spring.data.redis.lettuce.pool.min-idle}\n\n  # sso configuration      \n  sso-client:\n    client: \n    auth-url: \n    signout-url: \n    push-url: \n    secret-key: \n    \n#########################################\n# knife4j configuration\n#########################################\nknife4j:\n  enable: true\n  production: false\n  basic:\n    enable: false\n    username: admin\n    password: 123456\n  setting:\n    enableOpenApi: false\n    enableSwaggerModels: false\n    enableFooter: false\n    enableFooterCustom: true\n    footerCustomContent: Apache License 2.0 | Copyright 2022-[SNOWY](https://www.xiaonuo.vip)\n\n# knife4j doc groups\nspringdoc:\n  default-flat-param-object: true\n  group-configs:\n    - group: SNOWY-PLUGIN-AUTH\n      display-name: SNOWY-PLUGIN-AUTH\n      packages-to-scan: vip.xiaonuo.auth\n    - group: SNOWY-PLUGIN-DEV\n      display-name: SNOWY-PLUGIN-DEV\n      packages-to-scan: vip.xiaonuo.dev\n    - group: SNOWY-PLUGIN-GEN\n      display-name: SNOWY-PLUGIN-GEN\n      packages-to-scan: vip.xiaonuo.gen\n    - group: SNOWY-PLUGIN-MOBILE\n      display-name: SNOWY-PLUGIN-MOBILE\n      packages-to-scan: vip.xiaonuo.mobile\n    - group: SNOWY-PLUGIN-SYS\n      display-name: SNOWY-PLUGIN-SYS\n      packages-to-scan: vip.xiaonuo.sys\n\n\n#########################################\n# snowy configuration\n#########################################\nsnowy:\n  config:\n    # common configuration\n    common:\n      backend-url: http://localhost:9101\n      file-url: http://localhost:9003/api/webapp\n\n# plugin dev-sms configuration\nsms-oa:\n  config-type: yaml\n  core-pool-size: 20\n  queue-capacity: 20\n  max-pool-size: 20', 'a4d5cb4fb646995632295b4adb72b5b5', '2010-05-05 00:00:00', '2025-09-30 06:33:47', NULL, '0:0:0:0:0:0:0:1', 'U', 'snowy-cloud-dev', '');
INSERT INTO `his_config_info` VALUES (4, 3, 'snowy-xxl-job-app-dev.yaml', 'dev', '', '# 服务配置\r\nserver:\r\n  port: 9004\r\n  servlet:\r\n    context-path: /xxl-job-admin\r\n\r\n# spring相关配置\r\nspring:\r\n  boot:\r\n    admin:\r\n      client:\r\n        url: http://localhost:9001\r\n        instance:\r\n          # 默认使用的是主机名注册，改为使用ip注册\r\n          prefer-ip: true\r\n  cloud:\r\n    loadbalancer:\r\n      ribbon:\r\n        enabled: false\r\n      cache:\r\n        enabled: true\r\n        caffeine:\r\n          spec: initialCapacity=500,expireAfterWrite=5s\r\n    # nacos配置\r\n    nacos:\r\n      discovery:\r\n        server-addr: ${spring.cloud.nacos.config.server-addr}\r\n        namespace: ${spring.cloud.nacos.config.namespace}\r\n        group: ${spring.cloud.nacos.config.group}\r\n        username: ${spring.cloud.nacos.config.username}\r\n        password: ${spring.cloud.nacos.config.password}\r\n        metadata:\r\n          management.context-path: ${server.servlet.context-path}/actuator\r\n      config:\r\n        server-addr: localhost:8848 #Nacos配置中心地址\r\n        file-extension: yml #指定yml格式的配置\r\n        username: nacos\r\n        password: nacos\r\n  datasource:\r\n    ### xxl-job, datasource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://localhost:3306/snowy-cloud-job?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&nullCatalogMeansCurrent=true\r\n    username: root\r\n    password: 123456\r\n    ### datasource-pool\r\n    type: com.zaxxer.hikari.HikariDataSource\r\n    hikari:\r\n      minimum-idle: 10\r\n      maximum-pool-size: 30\r\n      auto-commit: true\r\n      idle-timeout: 30000\r\n      pool-name: HikariCP\r\n      max-lifetime: 900000\r\n      connection-timeout: 10000\r\n      connection-test-query: SELECT 1\r\n      validation-timeout: 1000\r\n  ### resources\r\n  resources:\r\n    static-locations: classpath:/static/\r\n  mvc:\r\n    servlet:\r\n      load-on-startup: 0\r\n    static-path-pattern: /static/**\r\n  ### freemarker\r\n  freemarker:\r\n    templateLoaderPath: classpath:/templates/\r\n    suffix: .ftl\r\n    charset: UTF-8\r\n    request-context-attribute: request\r\n    settings:\r\n      number_format: 0.##########\r\n  ### xxl-job, email\r\n  mail:\r\n    host: smtp.qq.com\r\n    port: 25\r\n    username: xxx@qq.com\r\n    from: xxx@qq.com\r\n    password: xxx\r\n    properties:\r\n      mail:\r\n        smtp:\r\n          auth: true\r\n          starttls:\r\n            enable: true\r\n            required: true\r\n          socketFactory:\r\n            class: javax.net.ssl.SSLSocketFactory\r\n\r\n### mybatis\r\nmybatis:\r\n  mapper-locations: classpath:/mybatis-mapper/*Mapper.xml\r\n# type-aliases-package: com.xxl.job.admin.core.model\r\n\r\n### xxl-job\r\n### xxl-job, access token\r\nxxl:\r\n  job:\r\n    accessToken: 123456\r\n    ### xxl-job, i18n (default is zh_CN, and you can choose \"zh_CN\", \"zh_TC\" and \"en\")\r\n    i18n: zh_CN\r\n    ## xxl-job, triggerpool max size\r\n    triggerpool:\r\n      fast:\r\n        max: 200\r\n      slow:\r\n        max: 100\r\n    ### xxl-job, log retention days\r\n    logretentiondays: 30\r\n\r\n### actuator\r\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n    health:\r\n      show-details: \"ALWAYS\"\r\n  health:\r\n    mail:\r\n      enabled: false', '544e57a2a3ce12e2c5f26e865a297f16', '2010-05-05 00:00:00', '2025-09-30 06:34:26', NULL, '0:0:0:0:0:0:0:1', 'U', 'snowy-cloud-dev', '');
INSERT INTO `his_config_info` VALUES (6, 4, 'snowy-biz-app-dev.yaml', 'dev', '', '#########################################\n# server configuration\n#########################################\nserver:\n  port: 9102\n\n#########################################\n# spring profiles configuration\n#########################################\nspring:\n\n  #########################################\n  # multipart configuration\n  #########################################\n  servlet:\n    multipart:\n      max-request-size: 100MB\n      max-file-size: 100MB\n\n  #########################################\n  # mvc configuration\n  #########################################\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n\n  #########################################\n  # main configuration\n  #########################################\n  main:\n    allow-circular-references: true\n\n  #########################################\n  # boot configuration\n  #########################################\n  boot:\n    admin:\n      client:\n        url: http://localhost:9001\n        instance:\n          # 默认使用的是主机名注册，改为使用ip注册\n          prefer-ip: true\n\n  #########################################\n  # cloud configuration\n  #########################################\n  cloud:\n    loadbalancer:\n      ribbon:\n        enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    nacos:\n      discovery:\n        server-addr: ${spring.cloud.nacos.config.server-addr}\n        namespace: ${spring.cloud.nacos.config.namespace}\n        group: ${spring.cloud.nacos.config.group}\n        username: ${spring.cloud.nacos.config.username}\n        password: ${spring.cloud.nacos.config.password}\n\n  #########################################\n  # datasource configuration\n  #########################################\n\n  # mysql\n  datasource:\n    dynamic:\n      datasource:\n        master:\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: jdbc:mysql://localhost:3306/snowy-cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&useInformationSchema=true&rewriteBatchedStatements=true\n          username: root\n          password: 123456\n      strict: true\n\n  # oracle\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: oracle.jdbc.driver.OracleDriver\n#          url: jdbc:oracle:thin:@//127.0.0.1:1521/XE?remarksReporting=true\n#          username: SNOWY\n#          password: 12345678\n#      strict: true\n\n  # mssql\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver\n#          url: jdbc:sqlserver://localhost:1433;DatabaseName=SNOWY\n#          username: sa\n#          password: 12345678\n#      strict: true\n\n  # dm database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: dm.jdbc.driver.DmDriver\n#          url: jdbc:dm://localhost:5236/SYSDBA\n#          username: SYSDBA\n#          password: SYSDBA\n#      strict: true\n\n  # kingbase database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.kingbase8.Driver\n#          url: jdbc:kingbase8://localhost:54321/snowy\n#          username: SYSTEM\n#          password: 123456\n#      strict: true\n\n      # druid global configuration\n      public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAMWiTVtdXFVrgFHDDKELZM0SywkWY3KjugN90eY5Sogon1j8Y0ClPF7nx3FuE7pAeBKiv7ChIS0vvx/59WUpKmUCAwEAAQ==\n      druid:\n        initial-size: 5\n        max-active: 20\n        min-idle: 5\n        max-wait: 60000\n        pool-prepared-statements: true\n        max-pool-prepared-statement-per-connection-size: 20\n        validation-query-timeout: 2000\n        test-on-borrow: false\n        test-on-return: false\n        test-while-idle: true\n        time-between-eviction-runs-millis: 6000\n        min-evictable-idle-time-millis: 300000\n        filters: stat\n        break-after-acquire-failure: false\n\n    # druid monitor configuration\n    druid:\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n\n  #########################################\n  # jackson configuration\n  #########################################\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n    locale: zh_CN\n\n  #########################################\n  # redis configuration\n  #########################################\n  data:\n    redis:\n      database: 1\n      host: 127.0.0.1\n      port: 6379\n      password:\n      timeout: 10s\n      lettuce:\n        pool:\n          max-active: 200\n          max-wait: -1ms\n          max-idle: 10\n          min-idle: 0\n\n#########################################\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\n#########################################\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      show-details: \"ALWAYS\"\n\n#########################################\n# mybatis-plus configuration\n#########################################\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    banner: false\n    enable-sql-runner: true\n    db-config:\n      id-type: ASSIGN_ID\n      logic-delete-field: DELETE_FLAG\n      logic-delete-value: DELETED\n      logic-not-delete-value: NOT_DELETE\n  mapper-locations: classpath*:vip/xiaonuo/**/mapping/*.xml,com/bstek/**/mapping/*.xml\n  type-handlers-package: vip.xiaonuo.common.handler\n\n#########################################\n# easy-trans configuration\n#########################################\neasy-trans:\n  is-enable-redis: true\n  is-enable-global: true\n  is-enable-tile: true\n  is-enable-cloud: true\n\n#########################################\n# sa-token configuration\n#########################################\nsa-token:\n  token-name: token\n  timeout: 2592000\n  active-timeout: -1\n  is-concurrent: true\n  is-share: false\n  max-login-count: -1\n  token-style: random-32\n  is-log: false\n  is-print: false\n\n# sa-token alone-redis configuration\n  alone-redis:\n    database: 2\n    host: ${spring.data.redis.host}\n    port: ${spring.data.redis.port}\n    password: ${spring.data.redis.password}\n    timeout: ${spring.data.redis.timeout}\n    lettuce:\n      pool:\n        max-active: ${spring.data.redis.lettuce.pool.max-active}\n        max-wait: ${spring.data.redis.lettuce.pool.max-wait}\n        max-idle: ${spring.data.redis.lettuce.pool.max-idle}\n        min-idle: ${spring.data.redis.lettuce.pool.min-idle}\n\n  # sso configuration      \n  sso-client:\n    client: \n    auth-url: \n    signout-url: \n    push-url: \n    secret-key: \n\n#########################################\n# knife4j configuration\n#########################################\nknife4j:\n  enable: true\n  production: false\n  basic:\n    enable: false\n    username: admin\n    password: 123456\n  setting:\n    enableOpenApi: false\n    enableSwaggerModels: false\n    enableFooter: false\n    enableFooterCustom: true\n    footerCustomContent: Apache License 2.0 | Copyright 2022-[SNOWY](https://www.xiaonuo.vip)\n\n# knife4j doc groups\nspringdoc:\n  default-flat-param-object: true\n  group-configs:\n    - group: SNOWY-PLUGIN-BIZ\n      display-name: SNOWY-PLUGIN-BIZ\n      packages-to-scan: vip.xiaonuo.biz\n    - group: SNOWY-PLUGIN-CLIENT\n      display-name: SNOWY-PLUGIN-CLIENT\n      packages-to-scan: vip.xiaonuo.client\n\n#########################################\n# snowy configuration\n#########################################\nsnowy:\n  config:\n# common configuration\n    common:\n      front-url: http://localhost:9000\n      backend-url: http://localhost:9102', 'b38c3ea8be0afef58640bc58d567a035', '2010-05-05 00:00:00', '2025-09-30 06:35:25', NULL, '0:0:0:0:0:0:0:1', 'U', 'snowy-cloud-dev', '');
INSERT INTO `his_config_info` VALUES (5, 5, 'snowy-web-app-dev.yaml', 'dev', '', '#########################################\n# server configuration\n#########################################\nserver:\n  port: 9101\n\n#########################################\n# spring profiles configuration\n#########################################\nspring:\n\n  #########################################\n  # multipart configuration\n  #########################################\n  servlet:\n    multipart:\n      max-request-size: 100MB\n      max-file-size: 100MB\n\n  #########################################\n  # mvc configuration\n  #########################################\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n\n  #########################################\n  # main configuration\n  #########################################\n  main:\n    allow-circular-references: true\n\n  #########################################\n  # boot configuration\n  #########################################\n  boot:\n    admin:\n      client:\n        url: http://localhost:9001\n        instance:\n          # 默认使用的是主机名注册，改为使用ip注册\n          prefer-ip: true\n\n  #########################################\n  # cloud configuration\n  #########################################\n  cloud:\n    loadbalancer:\n      ribbon:\n        enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    nacos:\n      discovery:\n        server-addr: ${spring.cloud.nacos.config.server-addr}\n        namespace: ${spring.cloud.nacos.config.namespace}\n        group: ${spring.cloud.nacos.config.group}\n        username: ${spring.cloud.nacos.config.username}\n        password: ${spring.cloud.nacos.config.password}\n\n  #########################################\n  # datasource configuration\n  #########################################\n\n  # mysql\n  datasource:\n    dynamic:\n      datasource:\n        master:\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: jdbc:mysql://localhost:53306/snowy-cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&useInformationSchema=true&rewriteBatchedStatements=true\n          username: root\n          password: Abc131419..\n      strict: true\n\n  # oracle\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: oracle.jdbc.driver.OracleDriver\n#          url: jdbc:oracle:thin:@//127.0.0.1:1521/XE?remarksReporting=true\n#          username: SNOWY\n#          password: 12345678\n#      strict: true\n\n  # mssql\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver\n#          url: jdbc:sqlserver://localhost:1433;DatabaseName=SNOWY\n#          username: sa\n#          password: 12345678\n#      strict: true\n\n  # dm database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: dm.jdbc.driver.DmDriver\n#          url: jdbc:dm://localhost:5236/SYSDBA\n#          username: SYSDBA\n#          password: SYSDBA\n#      strict: true\n\n  # kingbase database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.kingbase8.Driver\n#          url: jdbc:kingbase8://localhost:54321/snowy\n#          username: SYSTEM\n#          password: 123456\n#      strict: true\n\n      # druid global configuration\n      public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAMWiTVtdXFVrgFHDDKELZM0SywkWY3KjugN90eY5Sogon1j8Y0ClPF7nx3FuE7pAeBKiv7ChIS0vvx/59WUpKmUCAwEAAQ==\n      druid:\n        initial-size: 5\n        max-active: 20\n        min-idle: 5\n        max-wait: 60000\n        pool-prepared-statements: true\n        max-pool-prepared-statement-per-connection-size: 20\n        validation-query-timeout: 2000\n        test-on-borrow: false\n        test-on-return: false\n        test-while-idle: true\n        time-between-eviction-runs-millis: 6000\n        min-evictable-idle-time-millis: 300000\n        filters: stat\n        break-after-acquire-failure: false\n\n    # druid monitor configuration\n    druid:\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        allow: \"\"\n\n  #########################################\n  # jackson configuration\n  #########################################\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n    locale: zh_CN\n\n  #########################################\n  # redis configuration\n  #########################################\n  data:\n    redis:\n      database: 1\n      host: 127.0.0.1\n      port: 56379\n      password:\n      timeout: 10s\n      lettuce:\n        pool:\n          max-active: 200\n          max-wait: -1ms\n          max-idle: 10\n          min-idle: 0\n\n#########################################\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\n#########################################\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      show-details: \"ALWAYS\"\n\n#########################################\n# mybatis-plus configuration\n#########################################\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    banner: false\n    enable-sql-runner: true\n    db-config:\n      id-type: ASSIGN_ID\n      logic-delete-field: DELETE_FLAG\n      logic-delete-value: DELETED\n      logic-not-delete-value: NOT_DELETE\n  mapper-locations: classpath*:vip/xiaonuo/**/mapping/*.xml,com/bstek/**/mapping/*.xml\n  type-handlers-package: vip.xiaonuo.common.handler\n\n#########################################\n# easy-trans configuration\n#########################################\neasy-trans:\n  is-enable-redis: true\n  is-enable-global: true\n  is-enable-tile: true\n  is-enable-cloud: false\n\n#########################################\n# sa-token configuration\n#########################################\nsa-token:\n  token-name: token\n  timeout: 2592000\n  active-timeout: -1\n  is-concurrent: true\n  is-share: false\n  max-login-count: -1\n  token-style: random-32\n  is-log: false\n  is-print: false\n\n# sa-token alone-redis configuration\n  alone-redis:\n    database: 2\n    host: ${spring.data.redis.host}\n    port: ${spring.data.redis.port}\n    password: ${spring.data.redis.password}\n    timeout: ${spring.data.redis.timeout}\n    lettuce:\n      pool:\n        max-active: ${spring.data.redis.lettuce.pool.max-active}\n        max-wait: ${spring.data.redis.lettuce.pool.max-wait}\n        max-idle: ${spring.data.redis.lettuce.pool.max-idle}\n        min-idle: ${spring.data.redis.lettuce.pool.min-idle}\n\n  # sso configuration      \n  sso-client:\n    client: \n    auth-url: \n    signout-url: \n    push-url: \n    secret-key: \n    \n#########################################\n# knife4j configuration\n#########################################\nknife4j:\n  enable: true\n  production: false\n  basic:\n    enable: false\n    username: admin\n    password: 123456\n  setting:\n    enableOpenApi: false\n    enableSwaggerModels: false\n    enableFooter: false\n    enableFooterCustom: true\n    footerCustomContent: Apache License 2.0 | Copyright 2022-[SNOWY](https://www.xiaonuo.vip)\n\n# knife4j doc groups\nspringdoc:\n  default-flat-param-object: true\n  group-configs:\n    - group: SNOWY-PLUGIN-AUTH\n      display-name: SNOWY-PLUGIN-AUTH\n      packages-to-scan: vip.xiaonuo.auth\n    - group: SNOWY-PLUGIN-DEV\n      display-name: SNOWY-PLUGIN-DEV\n      packages-to-scan: vip.xiaonuo.dev\n    - group: SNOWY-PLUGIN-GEN\n      display-name: SNOWY-PLUGIN-GEN\n      packages-to-scan: vip.xiaonuo.gen\n    - group: SNOWY-PLUGIN-MOBILE\n      display-name: SNOWY-PLUGIN-MOBILE\n      packages-to-scan: vip.xiaonuo.mobile\n    - group: SNOWY-PLUGIN-SYS\n      display-name: SNOWY-PLUGIN-SYS\n      packages-to-scan: vip.xiaonuo.sys\n\n\n#########################################\n# snowy configuration\n#########################################\nsnowy:\n  config:\n    # common configuration\n    common:\n      backend-url: http://localhost:9101\n      file-url: http://localhost:9003/api/webapp\n\n# plugin dev-sms configuration\nsms-oa:\n  config-type: yaml\n  core-pool-size: 20\n  queue-capacity: 20\n  max-pool-size: 20', 'd1f77edb32cb61d645138bcc7b6516a5', '2010-05-05 00:00:00', '2025-09-30 06:48:24', NULL, '0:0:0:0:0:0:0:1', 'U', 'snowy-cloud-dev', '');
INSERT INTO `his_config_info` VALUES (3, 6, 'snowy-gateway-app-dev.yaml', 'dev', '', '# 服务配置\nserver:\n  port: 9003\n\n# spring相关配置\nspring:\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:53306/snowy-cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&useInformationSchema=true&rewriteBatchedStatements=true\n    username: root\n    password: Abc131419..\n\n# Oracle数据库\n#spring:\n#  datasource:\n#    driver-class-name: oracle.jdbc.OracleDriver\n#    url: jdbc:oracle:thin:@localhost:1521:xe\n#    username: SNOWY-CLOUD-ORACLE\n#    password: 123456\n\n# SQLServer配置\n#spring:\n#  datasource:\n#    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver\n#    url: jdbc:sqlserver://localhost:1433;DatabaseName=snowy-cloud-mssql\n#    username: sa\n#    password: 123456\n\n# PostgreSQL配置\n#spring:\n#  datasource:\n#    driverClassName: org.postgresql.Driver\n#    url: jdbc:postgresql://127.0.0.1:5432/snowy-cloud-postgresql\n#    username: postgres\n#    password: 123456\n\n# 达梦数据库配置\n#spring:\n#  datasource:\n#    driver-class-name: dm.jdbc.driver.DmDriver\n#    url: jdbc:dm://localhost:5236/SYSDBA\n#    username: SYSDBA\n#    password: 123456789\n\n# 人大金仓数据库\n#spring:\n#  datasource:\n#    driver-class-name: com.kingbase8.Driver\n#    url: jdbc:kingbase8://localhost:54321/snowy-cloud-kingbase\n#    username: system\n#    password: 123456\n# #人大金仓数据库兼容问题，不需要加在sql语句中加public的解决方法：\n# #在根目录data下的kingbase.conf文档里面找到search_path = \'\"$user\",PUBLIC,sys_catalog\'进行替换放开\n# #重启数据库即可完全兼容，注意 sql中不能出现mysql中的关键字的单引号\n\n  # redis相关配置\n  data:\n    redis:\n      database: 1\n      host: 127.0.0.1\n      port: 56379\n      password: \n      timeout: 10s\n      lettuce:\n        pool:\n          max-active: 200\n          max-wait: -1ms\n          max-idle: 10\n          min-idle: 0\n\n  boot:\n    admin:\n      client:\n        url: http://localhost:9001\n        instance:\n          # 默认使用的是主机名注册，改为使用ip注册\n          prefer-ip: true\n  cloud:\n    loadbalancer:\n      ribbon:\n        enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    # nacos配置\n    nacos:\n      discovery:\n        server-addr: ${spring.cloud.nacos.config.server-addr}\n        namespace: ${spring.cloud.nacos.config.namespace}\n        group: ${spring.cloud.nacos.config.group}\n        username: ${spring.cloud.nacos.config.username}\n        password: ${spring.cloud.nacos.config.password}\n    sentinel:\n      transport:\n        dashboard: localhost:9002\n        port: 8719\n      scg:\n        fallback:\n          mode: response\n          response-status: 455\n          response-body: error!\n    # gateway配置\n    gateway:\n      default-filters:\n        - DedupeResponseHeader=Access-Control-Allow-Origin\n      globalcors:\n        add-to-simple-url-handler-mapping: true\n        corsConfigurations:\n          \'[/**]\':\n            allowed-origins-patterns: \"*\"\n            allowed-methods: \"*\"\n            allowed-headers: \"*\"\n            allow-credentials: true\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        - id: snowy-web-app\n          uri: lb://snowy-web-app\n          predicates:\n            - Path=/api/webapp/**\n          filters:\n            - SwaggerHeaderFilter\n            - StripPrefix=2 #去掉Path中前两个节点\n            - name: Retry\n              args:\n                retries: 1 #重试次数\n        - id: snowy-web-app\n          uri: lb://snowy-web-app\n          predicates:\n            - Path=/druid/**\n          filters:\n            - SwaggerHeaderFilter\n            - name: Retry\n              args:\n                retries: 1 #重试次数\n        - id: snowy-biz-app\n          uri: lb://snowy-biz-app\n          predicates:\n            - Path=/api/bizapp/**\n          filters:\n            - SwaggerHeaderFilter\n            - StripPrefix=2 #去掉Path中前两个节点\n            - name: Retry\n              args:\n                retries: 1 #重试次数\n\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      show-details: \"ALWAYS\"\n\n#########################################\n# sa-token configuration\n#########################################\nsa-token:\n  token-name: token\n  timeout: 2592000\n  active-timeout: -1\n  is-concurrent: true\n  is-share: false\n  max-login-count: -1\n  token-style: random-32\n  is-log: false\n  is-print: false\n\n  # sa-token alone-redis configuration\n  alone-redis:\n    database: 2\n    host: ${spring.data.redis.host}\n    port: ${spring.data.redis.port}\n    password: ${spring.data.redis.password}\n    timeout: ${spring.data.redis.timeout}\n    lettuce:\n      pool:\n        max-active: ${spring.data.redis.lettuce.pool.max-active}\n        max-wait: ${spring.data.redis.lettuce.pool.max-wait}\n        max-idle: ${spring.data.redis.lettuce.pool.max-idle}\n        min-idle: ${spring.data.redis.lettuce.pool.min-idle}\n\n  # sso configuration      \n  sso-client:\n    client: \n    auth-url: \n    signout-url: \n    push-url: \n    secret-key: \n    \n# knife4j 文档聚合\nknife4j:\n  enable: true\n  production: false\n  basic:\n    enable: true\n    username: admin\n    password: Abc131419..\n  setting:\n    enableOpenApi: false\n    enableSwaggerModels: false\n    enableFooter: false\n    enableFooterCustom: true\n    footerCustomContent: Apache License 2.0 | Copyright 2022-[SNOWY](https://www.xiaonuo.vip)\n  # gateway聚合swagger文档\n  gateway:\n    enabled: true\n    # 排序规则(tag/operation排序自4.2.0版本新增)\n    # 取值：alpha-默认排序规则，官方swagger-ui默认实现,order-Knife4j提供的增强排序规则，开发者可扩展x-order，根据数值来自定义排序\n    tags-sorter: order\n    operations-sorter: order\n     # 指定手动配置的模式(默认为该模式)\n    strategy: manual\n    routes:\n      - name: SNOWY-PLUGIN-AUTH\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-AUTH\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-BIZ\n        url: /api/bizapp/v3/api-docs/SNOWY-PLUGIN-BIZ\n        service-name: snowy-biz-app\n        context-path: /\n      - name: SNOWY-PLUGIN-CLIENT\n        url: /api/bizapp/v3/api-docs/SNOWY-PLUGIN-CLIENT\n        service-name: snowy-biz-app\n        context-path: /\n      - name: SNOWY-PLUGIN-DEV\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-DEV\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-GEN\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-GEN\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-MOBILE\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-MOBILE\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-SYS\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-SYS\n        service-name: snowy-web-app\n        context-path: /', 'ab7379645d1d56f519811c45b90515dd', '2010-05-05 00:00:00', '2025-09-30 07:02:04', NULL, '0:0:0:0:0:0:0:1', 'U', 'snowy-cloud-dev', '');
INSERT INTO `his_config_info` VALUES (3, 7, 'snowy-gateway-app-dev.yaml', 'dev', '', '# 服务配置\nserver:\n  port: 9003\n\n# spring相关配置\nspring:\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:53306/snowy-cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&useInformationSchema=true&rewriteBatchedStatements=true\n    username: root\n    password: Abc131419..\n\n# Oracle数据库\n#spring:\n#  datasource:\n#    driver-class-name: oracle.jdbc.OracleDriver\n#    url: jdbc:oracle:thin:@localhost:1521:xe\n#    username: SNOWY-CLOUD-ORACLE\n#    password: 123456\n\n# SQLServer配置\n#spring:\n#  datasource:\n#    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver\n#    url: jdbc:sqlserver://localhost:1433;DatabaseName=snowy-cloud-mssql\n#    username: sa\n#    password: 123456\n\n# PostgreSQL配置\n#spring:\n#  datasource:\n#    driverClassName: org.postgresql.Driver\n#    url: jdbc:postgresql://127.0.0.1:5432/snowy-cloud-postgresql\n#    username: postgres\n#    password: 123456\n\n# 达梦数据库配置\n#spring:\n#  datasource:\n#    driver-class-name: dm.jdbc.driver.DmDriver\n#    url: jdbc:dm://localhost:5236/SYSDBA\n#    username: SYSDBA\n#    password: 123456789\n\n# 人大金仓数据库\n#spring:\n#  datasource:\n#    driver-class-name: com.kingbase8.Driver\n#    url: jdbc:kingbase8://localhost:54321/snowy-cloud-kingbase\n#    username: system\n#    password: 123456\n# #人大金仓数据库兼容问题，不需要加在sql语句中加public的解决方法：\n# #在根目录data下的kingbase.conf文档里面找到search_path = \'\"$user\",PUBLIC,sys_catalog\'进行替换放开\n# #重启数据库即可完全兼容，注意 sql中不能出现mysql中的关键字的单引号\n\n  # redis相关配置\n  data:\n    redis:\n      database: 1\n      host: 127.0.0.1\n      port: 56379\n      password: Abc131419..\n      timeout: 10s\n      lettuce:\n        pool:\n          max-active: 200\n          max-wait: -1ms\n          max-idle: 10\n          min-idle: 0\n\n  boot:\n    admin:\n      client:\n        url: http://localhost:9001\n        instance:\n          # 默认使用的是主机名注册，改为使用ip注册\n          prefer-ip: true\n  cloud:\n    loadbalancer:\n      ribbon:\n        enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    # nacos配置\n    nacos:\n      discovery:\n        server-addr: ${spring.cloud.nacos.config.server-addr}\n        namespace: ${spring.cloud.nacos.config.namespace}\n        group: ${spring.cloud.nacos.config.group}\n        username: ${spring.cloud.nacos.config.username}\n        password: ${spring.cloud.nacos.config.password}\n    sentinel:\n      transport:\n        dashboard: localhost:9002\n        port: 8719\n      scg:\n        fallback:\n          mode: response\n          response-status: 455\n          response-body: error!\n    # gateway配置\n    gateway:\n      default-filters:\n        - DedupeResponseHeader=Access-Control-Allow-Origin\n      globalcors:\n        add-to-simple-url-handler-mapping: true\n        corsConfigurations:\n          \'[/**]\':\n            allowed-origins-patterns: \"*\"\n            allowed-methods: \"*\"\n            allowed-headers: \"*\"\n            allow-credentials: true\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        - id: snowy-web-app\n          uri: lb://snowy-web-app\n          predicates:\n            - Path=/api/webapp/**\n          filters:\n            - SwaggerHeaderFilter\n            - StripPrefix=2 #去掉Path中前两个节点\n            - name: Retry\n              args:\n                retries: 1 #重试次数\n        - id: snowy-web-app\n          uri: lb://snowy-web-app\n          predicates:\n            - Path=/druid/**\n          filters:\n            - SwaggerHeaderFilter\n            - name: Retry\n              args:\n                retries: 1 #重试次数\n        - id: snowy-biz-app\n          uri: lb://snowy-biz-app\n          predicates:\n            - Path=/api/bizapp/**\n          filters:\n            - SwaggerHeaderFilter\n            - StripPrefix=2 #去掉Path中前两个节点\n            - name: Retry\n              args:\n                retries: 1 #重试次数\n\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      show-details: \"ALWAYS\"\n\n#########################################\n# sa-token configuration\n#########################################\nsa-token:\n  token-name: token\n  timeout: 2592000\n  active-timeout: -1\n  is-concurrent: true\n  is-share: false\n  max-login-count: -1\n  token-style: random-32\n  is-log: false\n  is-print: false\n\n  # sa-token alone-redis configuration\n  alone-redis:\n    database: 2\n    host: ${spring.data.redis.host}\n    port: ${spring.data.redis.port}\n    password: ${spring.data.redis.password}\n    timeout: ${spring.data.redis.timeout}\n    lettuce:\n      pool:\n        max-active: ${spring.data.redis.lettuce.pool.max-active}\n        max-wait: ${spring.data.redis.lettuce.pool.max-wait}\n        max-idle: ${spring.data.redis.lettuce.pool.max-idle}\n        min-idle: ${spring.data.redis.lettuce.pool.min-idle}\n\n  # sso configuration      \n  sso-client:\n    client: \n    auth-url: \n    signout-url: \n    push-url: \n    secret-key: \n    \n# knife4j 文档聚合\nknife4j:\n  enable: true\n  production: false\n  basic:\n    enable: true\n    username: admin\n    password: Abc131419..\n  setting:\n    enableOpenApi: false\n    enableSwaggerModels: false\n    enableFooter: false\n    enableFooterCustom: true\n    footerCustomContent: Apache License 2.0 | Copyright 2022-[SNOWY](https://www.xiaonuo.vip)\n  # gateway聚合swagger文档\n  gateway:\n    enabled: true\n    # 排序规则(tag/operation排序自4.2.0版本新增)\n    # 取值：alpha-默认排序规则，官方swagger-ui默认实现,order-Knife4j提供的增强排序规则，开发者可扩展x-order，根据数值来自定义排序\n    tags-sorter: order\n    operations-sorter: order\n     # 指定手动配置的模式(默认为该模式)\n    strategy: manual\n    routes:\n      - name: SNOWY-PLUGIN-AUTH\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-AUTH\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-BIZ\n        url: /api/bizapp/v3/api-docs/SNOWY-PLUGIN-BIZ\n        service-name: snowy-biz-app\n        context-path: /\n      - name: SNOWY-PLUGIN-CLIENT\n        url: /api/bizapp/v3/api-docs/SNOWY-PLUGIN-CLIENT\n        service-name: snowy-biz-app\n        context-path: /\n      - name: SNOWY-PLUGIN-DEV\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-DEV\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-GEN\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-GEN\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-MOBILE\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-MOBILE\n        service-name: snowy-web-app\n        context-path: /\n      - name: SNOWY-PLUGIN-SYS\n        url: /api/webapp/v3/api-docs/SNOWY-PLUGIN-SYS\n        service-name: snowy-web-app\n        context-path: /', '6712c7f6ee4b39fdee8722dbecc6bb34', '2010-05-05 00:00:00', '2025-09-30 07:02:33', NULL, '0:0:0:0:0:0:0:1', 'U', 'snowy-cloud-dev', '');
INSERT INTO `his_config_info` VALUES (4, 8, 'snowy-xxl-job-app-dev.yaml', 'dev', '', '# 服务配置\nserver:\n  port: 9004\n  servlet:\n    context-path: /xxl-job-admin\n\n# spring相关配置\nspring:\n  boot:\n    admin:\n      client:\n        url: http://localhost:9001\n        instance:\n          # 默认使用的是主机名注册，改为使用ip注册\n          prefer-ip: true\n  cloud:\n    loadbalancer:\n      ribbon:\n        enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    # nacos配置\n    nacos:\n      discovery:\n        server-addr: ${spring.cloud.nacos.config.server-addr}\n        namespace: ${spring.cloud.nacos.config.namespace}\n        group: ${spring.cloud.nacos.config.group}\n        username: ${spring.cloud.nacos.config.username}\n        password: ${spring.cloud.nacos.config.password}\n        metadata:\n          management.context-path: ${server.servlet.context-path}/actuator\n      config:\n        server-addr: localhost:8848 #Nacos配置中心地址\n        file-extension: yml #指定yml格式的配置\n        username: nacos\n        password: nacos\n  datasource:\n    ### xxl-job, datasource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:53306/snowy-cloud-job?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&nullCatalogMeansCurrent=true\n    username: root\n    password: Abc131419..\n    ### datasource-pool\n    type: com.zaxxer.hikari.HikariDataSource\n    hikari:\n      minimum-idle: 10\n      maximum-pool-size: 30\n      auto-commit: true\n      idle-timeout: 30000\n      pool-name: HikariCP\n      max-lifetime: 900000\n      connection-timeout: 10000\n      connection-test-query: SELECT 1\n      validation-timeout: 1000\n  ### resources\n  resources:\n    static-locations: classpath:/static/\n  mvc:\n    servlet:\n      load-on-startup: 0\n    static-path-pattern: /static/**\n  ### freemarker\n  freemarker:\n    templateLoaderPath: classpath:/templates/\n    suffix: .ftl\n    charset: UTF-8\n    request-context-attribute: request\n    settings:\n      number_format: 0.##########\n  ### xxl-job, email\n  mail:\n    host: smtp.qq.com\n    port: 25\n    username: xxx@qq.com\n    from: xxx@qq.com\n    password: xxx\n    properties:\n      mail:\n        smtp:\n          auth: true\n          starttls:\n            enable: true\n            required: true\n          socketFactory:\n            class: javax.net.ssl.SSLSocketFactory\n\n### mybatis\nmybatis:\n  mapper-locations: classpath:/mybatis-mapper/*Mapper.xml\n# type-aliases-package: com.xxl.job.admin.core.model\n\n### xxl-job\n### xxl-job, access token\nxxl:\n  job:\n    accessToken: 123456\n    ### xxl-job, i18n (default is zh_CN, and you can choose \"zh_CN\", \"zh_TC\" and \"en\")\n    i18n: zh_CN\n    ## xxl-job, triggerpool max size\n    triggerpool:\n      fast:\n        max: 200\n      slow:\n        max: 100\n    ### xxl-job, log retention days\n    logretentiondays: 30\n\n### actuator\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      show-details: \"ALWAYS\"\n  health:\n    mail:\n      enabled: false', '567ff08ee648106fc77fcb7abf530662', '2010-05-05 00:00:00', '2025-09-30 07:18:54', NULL, '0:0:0:0:0:0:0:1', 'U', 'snowy-cloud-dev', '');
INSERT INTO `his_config_info` VALUES (5, 9, 'snowy-web-app-dev.yaml', 'dev', '', '#########################################\n# server configuration\n#########################################\nserver:\n  port: 9101\n\n#########################################\n# spring profiles configuration\n#########################################\nspring:\n\n  #########################################\n  # multipart configuration\n  #########################################\n  servlet:\n    multipart:\n      max-request-size: 100MB\n      max-file-size: 100MB\n\n  #########################################\n  # mvc configuration\n  #########################################\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n\n  #########################################\n  # main configuration\n  #########################################\n  main:\n    allow-circular-references: true\n\n  #########################################\n  # boot configuration\n  #########################################\n  boot:\n    admin:\n      client:\n        url: http://localhost:9001\n        instance:\n          # 默认使用的是主机名注册，改为使用ip注册\n          prefer-ip: true\n\n  #########################################\n  # cloud configuration\n  #########################################\n  cloud:\n    loadbalancer:\n      ribbon:\n        enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    nacos:\n      discovery:\n        server-addr: ${spring.cloud.nacos.config.server-addr}\n        namespace: ${spring.cloud.nacos.config.namespace}\n        group: ${spring.cloud.nacos.config.group}\n        username: ${spring.cloud.nacos.config.username}\n        password: ${spring.cloud.nacos.config.password}\n\n  #########################################\n  # datasource configuration\n  #########################################\n\n  # mysql\n  datasource:\n    dynamic:\n      datasource:\n        master:\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: jdbc:mysql://localhost:53306/snowy-cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&useInformationSchema=true&rewriteBatchedStatements=true\n          username: root\n          password: Abc131419..\n      strict: true\n\n  # oracle\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: oracle.jdbc.driver.OracleDriver\n#          url: jdbc:oracle:thin:@//127.0.0.1:1521/XE?remarksReporting=true\n#          username: SNOWY\n#          password: 12345678\n#      strict: true\n\n  # mssql\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver\n#          url: jdbc:sqlserver://localhost:1433;DatabaseName=SNOWY\n#          username: sa\n#          password: 12345678\n#      strict: true\n\n  # dm database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: dm.jdbc.driver.DmDriver\n#          url: jdbc:dm://localhost:5236/SYSDBA\n#          username: SYSDBA\n#          password: SYSDBA\n#      strict: true\n\n  # kingbase database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.kingbase8.Driver\n#          url: jdbc:kingbase8://localhost:54321/snowy\n#          username: SYSTEM\n#          password: 123456\n#      strict: true\n\n      # druid global configuration\n      public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAMWiTVtdXFVrgFHDDKELZM0SywkWY3KjugN90eY5Sogon1j8Y0ClPF7nx3FuE7pAeBKiv7ChIS0vvx/59WUpKmUCAwEAAQ==\n      druid:\n        initial-size: 5\n        max-active: 20\n        min-idle: 5\n        max-wait: 60000\n        pool-prepared-statements: true\n        max-pool-prepared-statement-per-connection-size: 20\n        validation-query-timeout: 2000\n        test-on-borrow: false\n        test-on-return: false\n        test-while-idle: true\n        time-between-eviction-runs-millis: 6000\n        min-evictable-idle-time-millis: 300000\n        filters: stat\n        break-after-acquire-failure: false\n\n    # druid monitor configuration\n    druid:\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n        allow: \"\"\n\n  #########################################\n  # jackson configuration\n  #########################################\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n    locale: zh_CN\n\n  #########################################\n  # redis configuration\n  #########################################\n  data:\n    redis:\n      database: 1\n      host: 127.0.0.1\n      port: 56379\n      password:\n      timeout: 10s\n      lettuce:\n        pool:\n          max-active: 200\n          max-wait: -1ms\n          max-idle: 10\n          min-idle: 0\n\n#########################################\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\n#########################################\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      show-details: \"ALWAYS\"\n\n#########################################\n# mybatis-plus configuration\n#########################################\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    banner: false\n    enable-sql-runner: true\n    db-config:\n      id-type: ASSIGN_ID\n      logic-delete-field: DELETE_FLAG\n      logic-delete-value: DELETED\n      logic-not-delete-value: NOT_DELETE\n  mapper-locations: classpath*:vip/xiaonuo/**/mapping/*.xml,com/bstek/**/mapping/*.xml\n  type-handlers-package: vip.xiaonuo.common.handler\n\n#########################################\n# easy-trans configuration\n#########################################\neasy-trans:\n  is-enable-redis: true\n  is-enable-global: true\n  is-enable-tile: true\n  is-enable-cloud: false\n\n#########################################\n# sa-token configuration\n#########################################\nsa-token:\n  token-name: token\n  timeout: 2592000\n  active-timeout: -1\n  is-concurrent: true\n  is-share: false\n  max-login-count: -1\n  token-style: random-32\n  is-log: false\n  is-print: false\n\n# sa-token alone-redis configuration\n  alone-redis:\n    database: 2\n    host: ${spring.data.redis.host}\n    port: ${spring.data.redis.port}\n    password: ${spring.data.redis.password}\n    timeout: ${spring.data.redis.timeout}\n    lettuce:\n      pool:\n        max-active: ${spring.data.redis.lettuce.pool.max-active}\n        max-wait: ${spring.data.redis.lettuce.pool.max-wait}\n        max-idle: ${spring.data.redis.lettuce.pool.max-idle}\n        min-idle: ${spring.data.redis.lettuce.pool.min-idle}\n\n  # sso configuration      \n  sso-client:\n    client: \n    auth-url: \n    signout-url: \n    push-url: \n    secret-key: \n    \n#########################################\n# knife4j configuration\n#########################################\nknife4j:\n  enable: true\n  production: false\n  basic:\n    enable: false\n    username: admin\n    password: 123456\n  setting:\n    enableOpenApi: false\n    enableSwaggerModels: false\n    enableFooter: false\n    enableFooterCustom: true\n    footerCustomContent: Apache License 2.0 | Copyright 2022-[SNOWY](https://www.xiaonuo.vip)\n\n# knife4j doc groups\nspringdoc:\n  default-flat-param-object: true\n  group-configs:\n    - group: SNOWY-PLUGIN-AUTH\n      display-name: SNOWY-PLUGIN-AUTH\n      packages-to-scan: vip.xiaonuo.auth\n    - group: SNOWY-PLUGIN-DEV\n      display-name: SNOWY-PLUGIN-DEV\n      packages-to-scan: vip.xiaonuo.dev\n    - group: SNOWY-PLUGIN-GEN\n      display-name: SNOWY-PLUGIN-GEN\n      packages-to-scan: vip.xiaonuo.gen\n    - group: SNOWY-PLUGIN-MOBILE\n      display-name: SNOWY-PLUGIN-MOBILE\n      packages-to-scan: vip.xiaonuo.mobile\n    - group: SNOWY-PLUGIN-SYS\n      display-name: SNOWY-PLUGIN-SYS\n      packages-to-scan: vip.xiaonuo.sys\n\n\n#########################################\n# snowy configuration\n#########################################\nsnowy:\n  config:\n    # common configuration\n    common:\n      backend-url: http://localhost:9101\n      file-url: http://localhost:9003/api/webapp\n\n# plugin dev-sms configuration\nsms-oa:\n  config-type: yaml\n  core-pool-size: 20\n  queue-capacity: 20\n  max-pool-size: 20', 'd1f77edb32cb61d645138bcc7b6516a5', '2010-05-05 00:00:00', '2025-09-30 07:28:14', NULL, '0:0:0:0:0:0:0:1', 'U', 'snowy-cloud-dev', '');
INSERT INTO `his_config_info` VALUES (6, 10, 'snowy-biz-app-dev.yaml', 'dev', '', '#########################################\n# server configuration\n#########################################\nserver:\n  port: 9102\n\n#########################################\n# spring profiles configuration\n#########################################\nspring:\n\n  #########################################\n  # multipart configuration\n  #########################################\n  servlet:\n    multipart:\n      max-request-size: 100MB\n      max-file-size: 100MB\n\n  #########################################\n  # mvc configuration\n  #########################################\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n\n  #########################################\n  # main configuration\n  #########################################\n  main:\n    allow-circular-references: true\n\n  #########################################\n  # boot configuration\n  #########################################\n  boot:\n    admin:\n      client:\n        url: http://localhost:9001\n        instance:\n          # 默认使用的是主机名注册，改为使用ip注册\n          prefer-ip: true\n\n  #########################################\n  # cloud configuration\n  #########################################\n  cloud:\n    loadbalancer:\n      ribbon:\n        enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    nacos:\n      discovery:\n        server-addr: ${spring.cloud.nacos.config.server-addr}\n        namespace: ${spring.cloud.nacos.config.namespace}\n        group: ${spring.cloud.nacos.config.group}\n        username: ${spring.cloud.nacos.config.username}\n        password: ${spring.cloud.nacos.config.password}\n\n  #########################################\n  # datasource configuration\n  #########################################\n\n  # mysql\n  datasource:\n    dynamic:\n      datasource:\n        master:\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: jdbc:mysql://localhost:53306/snowy-cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&useInformationSchema=true&rewriteBatchedStatements=true\n          username: root\n          password: Abc131419..\n      strict: true\n\n  # oracle\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: oracle.jdbc.driver.OracleDriver\n#          url: jdbc:oracle:thin:@//127.0.0.1:1521/XE?remarksReporting=true\n#          username: SNOWY\n#          password: 12345678\n#      strict: true\n\n  # mssql\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver\n#          url: jdbc:sqlserver://localhost:1433;DatabaseName=SNOWY\n#          username: sa\n#          password: 12345678\n#      strict: true\n\n  # dm database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: dm.jdbc.driver.DmDriver\n#          url: jdbc:dm://localhost:5236/SYSDBA\n#          username: SYSDBA\n#          password: SYSDBA\n#      strict: true\n\n  # kingbase database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.kingbase8.Driver\n#          url: jdbc:kingbase8://localhost:54321/snowy\n#          username: SYSTEM\n#          password: 123456\n#      strict: true\n\n      # druid global configuration\n      public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAMWiTVtdXFVrgFHDDKELZM0SywkWY3KjugN90eY5Sogon1j8Y0ClPF7nx3FuE7pAeBKiv7ChIS0vvx/59WUpKmUCAwEAAQ==\n      druid:\n        initial-size: 5\n        max-active: 20\n        min-idle: 5\n        max-wait: 60000\n        pool-prepared-statements: true\n        max-pool-prepared-statement-per-connection-size: 20\n        validation-query-timeout: 2000\n        test-on-borrow: false\n        test-on-return: false\n        test-while-idle: true\n        time-between-eviction-runs-millis: 6000\n        min-evictable-idle-time-millis: 300000\n        filters: stat\n        break-after-acquire-failure: false\n\n    # druid monitor configuration\n    druid:\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n\n  #########################################\n  # jackson configuration\n  #########################################\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n    locale: zh_CN\n\n  #########################################\n  # redis configuration\n  #########################################\n  data:\n    redis:\n      database: 1\n      host: 127.0.0.1\n      port: 56379\n      password:\n      timeout: 10s\n      lettuce:\n        pool:\n          max-active: 200\n          max-wait: -1ms\n          max-idle: 10\n          min-idle: 0\n\n#########################################\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\n#########################################\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      show-details: \"ALWAYS\"\n\n#########################################\n# mybatis-plus configuration\n#########################################\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    banner: false\n    enable-sql-runner: true\n    db-config:\n      id-type: ASSIGN_ID\n      logic-delete-field: DELETE_FLAG\n      logic-delete-value: DELETED\n      logic-not-delete-value: NOT_DELETE\n  mapper-locations: classpath*:vip/xiaonuo/**/mapping/*.xml,com/bstek/**/mapping/*.xml\n  type-handlers-package: vip.xiaonuo.common.handler\n\n#########################################\n# easy-trans configuration\n#########################################\neasy-trans:\n  is-enable-redis: true\n  is-enable-global: true\n  is-enable-tile: true\n  is-enable-cloud: true\n\n#########################################\n# sa-token configuration\n#########################################\nsa-token:\n  token-name: token\n  timeout: 2592000\n  active-timeout: -1\n  is-concurrent: true\n  is-share: false\n  max-login-count: -1\n  token-style: random-32\n  is-log: false\n  is-print: false\n\n# sa-token alone-redis configuration\n  alone-redis:\n    database: 2\n    host: ${spring.data.redis.host}\n    port: ${spring.data.redis.port}\n    password: ${spring.data.redis.password}\n    timeout: ${spring.data.redis.timeout}\n    lettuce:\n      pool:\n        max-active: ${spring.data.redis.lettuce.pool.max-active}\n        max-wait: ${spring.data.redis.lettuce.pool.max-wait}\n        max-idle: ${spring.data.redis.lettuce.pool.max-idle}\n        min-idle: ${spring.data.redis.lettuce.pool.min-idle}\n\n  # sso configuration      \n  sso-client:\n    client: \n    auth-url: \n    signout-url: \n    push-url: \n    secret-key: \n\n#########################################\n# knife4j configuration\n#########################################\nknife4j:\n  enable: true\n  production: false\n  basic:\n    enable: false\n    username: admin\n    password: 123456\n  setting:\n    enableOpenApi: false\n    enableSwaggerModels: false\n    enableFooter: false\n    enableFooterCustom: true\n    footerCustomContent: Apache License 2.0 | Copyright 2022-[SNOWY](https://www.xiaonuo.vip)\n\n# knife4j doc groups\nspringdoc:\n  default-flat-param-object: true\n  group-configs:\n    - group: SNOWY-PLUGIN-BIZ\n      display-name: SNOWY-PLUGIN-BIZ\n      packages-to-scan: vip.xiaonuo.biz\n    - group: SNOWY-PLUGIN-CLIENT\n      display-name: SNOWY-PLUGIN-CLIENT\n      packages-to-scan: vip.xiaonuo.client\n\n#########################################\n# snowy configuration\n#########################################\nsnowy:\n  config:\n# common configuration\n    common:\n      front-url: http://localhost:9000\n      backend-url: http://localhost:9102', 'ddc97625177a8840b9d0b7c5fb7c2992', '2010-05-05 00:00:00', '2025-09-30 07:28:29', NULL, '0:0:0:0:0:0:0:1', 'U', 'snowy-cloud-dev', '');
INSERT INTO `his_config_info` VALUES (6, 11, 'snowy-biz-app-dev.yaml', 'dev', '', '#########################################\n# server configuration\n#########################################\nserver:\n  port: 9102\n\n#########################################\n# spring profiles configuration\n#########################################\nspring:\n\n  #########################################\n  # multipart configuration\n  #########################################\n  servlet:\n    multipart:\n      max-request-size: 100MB\n      max-file-size: 100MB\n\n  #########################################\n  # mvc configuration\n  #########################################\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n\n  #########################################\n  # main configuration\n  #########################################\n  main:\n    allow-circular-references: true\n\n  #########################################\n  # boot configuration\n  #########################################\n  boot:\n    admin:\n      client:\n        url: http://localhost:9001\n        instance:\n          # 默认使用的是主机名注册，改为使用ip注册\n          prefer-ip: true\n\n  #########################################\n  # cloud configuration\n  #########################################\n  cloud:\n    loadbalancer:\n      ribbon:\n        enabled: false\n      cache:\n        enabled: true\n        caffeine:\n          spec: initialCapacity=500,expireAfterWrite=5s\n    nacos:\n      discovery:\n        server-addr: ${spring.cloud.nacos.config.server-addr}\n        namespace: ${spring.cloud.nacos.config.namespace}\n        group: ${spring.cloud.nacos.config.group}\n        username: ${spring.cloud.nacos.config.username}\n        password: ${spring.cloud.nacos.config.password}\n\n  #########################################\n  # datasource configuration\n  #########################################\n\n  # mysql\n  datasource:\n    dynamic:\n      datasource:\n        master:\n          driver-class-name: com.mysql.cj.jdbc.Driver\n          url: jdbc:mysql://localhost:53306/snowy-cloud?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowPublicKeyRetrieval=true&nullCatalogMeansCurrent=true&useInformationSchema=true&rewriteBatchedStatements=true\n          username: root\n          password: Abc131419..\n      strict: true\n\n  # oracle\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: oracle.jdbc.driver.OracleDriver\n#          url: jdbc:oracle:thin:@//127.0.0.1:1521/XE?remarksReporting=true\n#          username: SNOWY\n#          password: 12345678\n#      strict: true\n\n  # mssql\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver\n#          url: jdbc:sqlserver://localhost:1433;DatabaseName=SNOWY\n#          username: sa\n#          password: 12345678\n#      strict: true\n\n  # dm database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: dm.jdbc.driver.DmDriver\n#          url: jdbc:dm://localhost:5236/SYSDBA\n#          username: SYSDBA\n#          password: SYSDBA\n#      strict: true\n\n  # kingbase database\n#  datasource:\n#    dynamic:\n#      datasource:\n#        master:\n#          driver-class-name: com.kingbase8.Driver\n#          url: jdbc:kingbase8://localhost:54321/snowy\n#          username: SYSTEM\n#          password: 123456\n#      strict: true\n\n      # druid global configuration\n      public-key: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAMWiTVtdXFVrgFHDDKELZM0SywkWY3KjugN90eY5Sogon1j8Y0ClPF7nx3FuE7pAeBKiv7ChIS0vvx/59WUpKmUCAwEAAQ==\n      druid:\n        initial-size: 5\n        max-active: 20\n        min-idle: 5\n        max-wait: 60000\n        pool-prepared-statements: true\n        max-pool-prepared-statement-per-connection-size: 20\n        validation-query-timeout: 2000\n        test-on-borrow: false\n        test-on-return: false\n        test-while-idle: true\n        time-between-eviction-runs-millis: 6000\n        min-evictable-idle-time-millis: 300000\n        filters: stat\n        break-after-acquire-failure: false\n\n    # druid monitor configuration\n    druid:\n      stat-view-servlet:\n        enabled: true\n        login-username: admin\n        login-password: 123456\n\n  #########################################\n  # jackson configuration\n  #########################################\n  jackson:\n    time-zone: GMT+8\n    date-format: yyyy-MM-dd HH:mm:ss\n    locale: zh_CN\n\n  #########################################\n  # redis configuration\n  #########################################\n  data:\n    redis:\n      database: 1\n      host: 127.0.0.1\n      port: 56379\n      password: Abc131419..\n      timeout: 10s\n      lettuce:\n        pool:\n          max-active: 200\n          max-wait: -1ms\n          max-idle: 10\n          min-idle: 0\n\n#########################################\n# 开放所有endpoint，实际生产根据自身需要开放，出于安全考虑不建议全部开放\n#########################################\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      show-details: \"ALWAYS\"\n\n#########################################\n# mybatis-plus configuration\n#########################################\nmybatis-plus:\n  configuration:\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  global-config:\n    banner: false\n    enable-sql-runner: true\n    db-config:\n      id-type: ASSIGN_ID\n      logic-delete-field: DELETE_FLAG\n      logic-delete-value: DELETED\n      logic-not-delete-value: NOT_DELETE\n  mapper-locations: classpath*:vip/xiaonuo/**/mapping/*.xml,com/bstek/**/mapping/*.xml\n  type-handlers-package: vip.xiaonuo.common.handler\n\n#########################################\n# easy-trans configuration\n#########################################\neasy-trans:\n  is-enable-redis: true\n  is-enable-global: true\n  is-enable-tile: true\n  is-enable-cloud: true\n\n#########################################\n# sa-token configuration\n#########################################\nsa-token:\n  token-name: token\n  timeout: 2592000\n  active-timeout: -1\n  is-concurrent: true\n  is-share: false\n  max-login-count: -1\n  token-style: random-32\n  is-log: false\n  is-print: false\n\n# sa-token alone-redis configuration\n  alone-redis:\n    database: 2\n    host: ${spring.data.redis.host}\n    port: ${spring.data.redis.port}\n    password: ${spring.data.redis.password}\n    timeout: ${spring.data.redis.timeout}\n    lettuce:\n      pool:\n        max-active: ${spring.data.redis.lettuce.pool.max-active}\n        max-wait: ${spring.data.redis.lettuce.pool.max-wait}\n        max-idle: ${spring.data.redis.lettuce.pool.max-idle}\n        min-idle: ${spring.data.redis.lettuce.pool.min-idle}\n\n  # sso configuration      \n  sso-client:\n    client: \n    auth-url: \n    signout-url: \n    push-url: \n    secret-key: \n\n#########################################\n# knife4j configuration\n#########################################\nknife4j:\n  enable: true\n  production: false\n  basic:\n    enable: false\n    username: admin\n    password: 123456\n  setting:\n    enableOpenApi: false\n    enableSwaggerModels: false\n    enableFooter: false\n    enableFooterCustom: true\n    footerCustomContent: Apache License 2.0 | Copyright 2022-[SNOWY](https://www.xiaonuo.vip)\n\n# knife4j doc groups\nspringdoc:\n  default-flat-param-object: true\n  group-configs:\n    - group: SNOWY-PLUGIN-BIZ\n      display-name: SNOWY-PLUGIN-BIZ\n      packages-to-scan: vip.xiaonuo.biz\n    - group: SNOWY-PLUGIN-CLIENT\n      display-name: SNOWY-PLUGIN-CLIENT\n      packages-to-scan: vip.xiaonuo.client\n\n#########################################\n# snowy configuration\n#########################################\nsnowy:\n  config:\n# common configuration\n    common:\n      front-url: http://localhost:9000\n      backend-url: http://localhost:9102', '702b134b96755fc4d5a732089d4340ee', '2010-05-05 00:00:00', '2025-09-30 07:29:29', NULL, '0:0:0:0:0:0:0:1', 'U', 'snowy-cloud-dev', '');

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions`  (
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `resource` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `action` varchar(8) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  UNIQUE INDEX `uk_role_permission`(`role` ASC, `resource` ASC, `action` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of permissions
-- ----------------------------

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  UNIQUE INDEX `uk_username_role`(`username` ASC, `role` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity`  (
  `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数',
  `max_aggr_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_id`(`tenant_id` ASC) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = '租户容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of tenant_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NULL DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_info_kptenantid`(`kp` ASC, `tenant_id` ASC) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id` ASC) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8mb3 COLLATE = utf8mb3_bin COMMENT = 'tenant_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of tenant_info
-- ----------------------------
INSERT INTO `tenant_info` VALUES (1, '1', 'snowy-cloud-dev', 'snowy-cloud-dev', 'snowy-cloud-dev', 'nacos', 1713894227456, 1713894227456);
INSERT INTO `tenant_info` VALUES (2, '1', 'snowy-cloud-test', 'snowy-cloud-test', 'snowy-cloud-test', 'nacos', 1713894243605, 1713894243605);
INSERT INTO `tenant_info` VALUES (3, '1', 'snowy-cloud-prod', 'snowy-cloud-prod', 'snowy-cloud-prod', 'nacos', 1713894255143, 1713894255143);

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `password` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', 1);

SET FOREIGN_KEY_CHECKS = 1;
